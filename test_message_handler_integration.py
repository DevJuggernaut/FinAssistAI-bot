#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è —Ä–∞—Ö—É–Ω–∫—ñ–≤
"""
import asyncio
import sys
import os

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç—É –¥–æ sys.path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_message_handler_logic():
    """–¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—ñ–≤"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–∫–∏ –æ–±—Ä–æ–±–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    print("=" * 60)
    
    # –°–∏–º—É–ª—é—î–º–æ context.user_data –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Å—Ç–∞–Ω—ñ–≤
    test_scenarios = [
        {
            "name": "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞–∑–≤–∏ —Ä–∞—Ö—É–Ω–∫—É",
            "user_data": {"awaiting_account_name": True},
            "expected_handler": "handle_account_text_input (name)",
            "input_text": "–ú–æ—è –≥–æ—Ç—ñ–≤–∫–∞"
        },
        {
            "name": "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É —Ä–∞—Ö—É–Ω–∫—É", 
            "user_data": {"awaiting_account_balance": True},
            "expected_handler": "handle_account_text_input (balance)",
            "input_text": "5000"
        },
        {
            "name": "–û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Å—É–º–∏ –ø–µ—Ä–µ–∫–∞–∑—É",
            "user_data": {"awaiting_transfer_amount": True},
            "expected_handler": "handle_account_text_input (transfer)",
            "input_text": "1500"
        },
        {
            "name": "–ó–≤–∏—á–∞–π–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è",
            "user_data": {},
            "expected_handler": "transaction parsing",
            "input_text": "100 –ø—Ä–æ–¥—É–∫—Ç–∏"
        }
    ]
    
    print("üìã –°—Ü–µ–Ω–∞—Ä—ñ—ó –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å:")
    for i, scenario in enumerate(test_scenarios, 1):
        print(f"\n{i}. {scenario['name']}")
        print(f"   üì§ –í–≤—ñ–¥: '{scenario['input_text']}'")
        print(f"   üéØ –û—á—ñ–∫—É–≤–∞–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫: {scenario['expected_handler']}")
        print(f"   üìä –°—Ç–∞–Ω user_data: {scenario['user_data']}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–æ–≥—ñ–∫—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
        if scenario['user_data'].get('awaiting_account_name'):
            print(f"   ‚úÖ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è: handle_account_text_input –¥–ª—è –Ω–∞–∑–≤–∏")
        elif scenario['user_data'].get('awaiting_account_balance'):
            print(f"   ‚úÖ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è: handle_account_text_input –¥–ª—è –±–∞–ª–∞–Ω—Å—É")
        elif scenario['user_data'].get('awaiting_transfer_amount'):
            print(f"   ‚úÖ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è: handle_account_text_input –¥–ª—è –ø–µ—Ä–µ–∫–∞–∑—É")
        else:
            print(f"   ‚úÖ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è: –û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–æ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó")

def test_account_creation_flow():
    """–¢–µ—Å—Ç—É—î–º–æ –ø–æ—Ç—ñ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É"""
    print(f"\nüîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É")
    print("=" * 60)
    
    steps = [
        {
            "step": 1,
            "description": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±–∏—Ä–∞—î —Ç–∏–ø —Ä–∞—Ö—É–Ω–∫—É",
            "action": "–ù–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É '–ì–æ—Ç—ñ–≤–∫–∞'",
            "result": "–ü–æ–∫–∞–∑—É—î—Ç—å—Å—è —Ñ–æ—Ä–º–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–∞–∑–≤–∏",
            "user_data_change": "awaiting_account_name = True"
        },
        {
            "step": 2, 
            "description": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤—É",
            "action": "–ü–∏—à–µ '–ú–æ—è –≥–æ—Ç—ñ–≤–∫–∞'",
            "result": "–ü–æ–∫–∞–∑—É—î—Ç—å—Å—è —Ñ–æ—Ä–º–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É",
            "user_data_change": "awaiting_account_name = False, awaiting_account_balance = True"
        },
        {
            "step": 3,
            "description": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –±–∞–ª–∞–Ω—Å",
            "action": "–ü–∏—à–µ '5000'",
            "result": "–†–∞—Ö—É–Ω–æ–∫ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è",
            "user_data_change": "awaiting_account_balance = False, –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö"
        }
    ]
    
    for step in steps:
        print(f"\nüìã –ö—Ä–æ–∫ {step['step']}: {step['description']}")
        print(f"   üëÜ –î—ñ—è: {step['action']}")
        print(f"   üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç: {step['result']}")
        print(f"   üíæ –ó–º—ñ–Ω–∞ user_data: {step['user_data_change']}")

def test_transfer_flow():
    """–¢–µ—Å—Ç—É—î–º–æ –ø–æ—Ç—ñ–∫ –ø–µ—Ä–µ–∫–∞–∑—É –º—ñ–∂ —Ä–∞—Ö—É–Ω–∫–∞–º–∏"""
    print(f"\nüí∏ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ–∫—É –ø–µ—Ä–µ–∫–∞–∑—É –º—ñ–∂ —Ä–∞—Ö—É–Ω–∫–∞–º–∏")
    print("=" * 60)
    
    steps = [
        {
            "step": 1,
            "description": "–í–∏–±—ñ—Ä —Ä–∞—Ö—É–Ω–∫—É-–¥–∂–µ—Ä–µ–ª–∞",
            "action": "–ù–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É —Ä–∞—Ö—É–Ω–∫—É",
            "result": "–ü–æ–∫–∞–∑—É—î—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ —Ä–∞—Ö—É–Ω–∫—ñ–≤ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è"
        },
        {
            "step": 2,
            "description": "–í–∏–±—ñ—Ä —Ä–∞—Ö—É–Ω–∫—É –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è", 
            "action": "–ù–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É —Ü—ñ–ª—å–æ–≤–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É",
            "result": "–ü–æ–∫–∞–∑—É—î—Ç—å—Å—è —Ñ–æ—Ä–º–∞ –≤–≤–µ–¥–µ–Ω–Ω—è —Å—É–º–∏",
            "user_data_change": "awaiting_transfer_amount = True"
        },
        {
            "step": 3,
            "description": "–í–≤–µ–¥–µ–Ω–Ω—è —Å—É–º–∏ –ø–µ—Ä–µ–∫–∞–∑—É",
            "action": "–ü–∏—à–µ '1500'",
            "result": "–ü–µ—Ä–µ–∫–∞–∑ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è",
            "user_data_change": "awaiting_transfer_amount = False, –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö"
        }
    ]
    
    for step in steps:
        print(f"\nüìã –ö—Ä–æ–∫ {step['step']}: {step['description']}")
        print(f"   üëÜ –î—ñ—è: {step['action']}")
        print(f"   üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç: {step['result']}")
        if 'user_data_change' in step:
            print(f"   üíæ –ó–º—ñ–Ω–∞ user_data: {step['user_data_change']}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –æ–±—Ä–æ–±–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    print("=" * 70)
    
    try:
        # –¢–µ—Å—Ç –ª–æ–≥—ñ–∫–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∞
        test_message_handler_logic()
        
        # –¢–µ—Å—Ç –ø–æ—Ç–æ–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É
        test_account_creation_flow()
        
        # –¢–µ—Å—Ç –ø–æ—Ç–æ–∫—É –ø–µ—Ä–µ–∫–∞–∑—É
        test_transfer_flow()
        
        print(f"\n‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ª–æ–≥—ñ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"\nüîß –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è:")
        print(f"   ‚Ä¢ –î–æ–¥–∞–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É awaiting_account_balance –≤ message_handler.py")
        print(f"   ‚Ä¢ –î–æ–¥–∞–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É awaiting_transfer_amount –≤ message_handler.py")
        print(f"   ‚Ä¢ –¢–µ–ø–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—å—Å—è")
        print(f"\nüí° –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   ‚Ä¢ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—ñ–≤ —Ç–µ–ø–µ—Ä –ø—Ä–∞—Ü—é—î –∑ —Ä—É—á–Ω–∏–º –≤–≤–æ–¥–æ–º")
        print(f"   ‚Ä¢ –ü–µ—Ä–µ–∫–∞–∑ –º—ñ–∂ —Ä–∞—Ö—É–Ω–∫–∞–º–∏ –ø—Ä–∞—Ü—é—î –∑ —Ä—É—á–Ω–∏–º –≤–≤–æ–¥–æ–º")
        print(f"   ‚Ä¢ –í—Å—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ —Å—Ç–∞–Ω–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
