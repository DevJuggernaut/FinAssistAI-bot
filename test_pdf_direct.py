#!/usr/bin/env python3
"""
–ù–æ–≤–∏–π —Ç–µ—Å—Ç PDF –ø–∞—Ä—Å–∏–Ω–≥—É –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º —ñ–º–ø–æ—Ä—Ç–æ–º
"""

import sys
import os

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–æ–µ–∫—Ç—É
project_path = '/Users/abobina/telegram_bot/FinAssistAI-bot'
if project_path not in sys.path:
    sys.path.insert(0, project_path)

# –û—á–∏—â—É—î–º–æ –∫–µ—à –º–æ–¥—É–ª—ñ–≤
modules_to_clear = [k for k in sys.modules.keys() if k.startswith('services')]
for module in modules_to_clear:
    if module in sys.modules:
        del sys.modules[module]

def test_pdf_parsing_direct():
    """–ü—Ä—è–º–∏–π —Ç–µ—Å—Ç PDF –ø–∞—Ä—Å–∏–Ω–≥—É"""
    print("üîÑ –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—ñ...")
    
    try:
        from services.statement_parser import StatementParser
        print("‚úÖ StatementParser —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–µ—Ç–æ–¥—É
        parser = StatementParser()
        has_method = hasattr(parser, '_parse_monobank_pdf')
        print(f"üîç –ú–µ—Ç–æ–¥ _parse_monobank_pdf —ñ—Å–Ω—É—î: {'‚úÖ' if has_method else '‚ùå'}")
        
        if not has_method:
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–µ—Ç–æ–¥–∏
            methods = [method for method in dir(parser) if method.startswith('_parse')]
            print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ñ –º–µ—Ç–æ–¥–∏ –ø–∞—Ä—Å–∏–Ω–≥—É: {methods}")
            return
        
        # –¢–µ—Å—Ç—É—î–º–æ –ø–∞—Ä—Å–∏–Ω–≥
        pdf_file = "/Users/abobina/telegram_bot/FinAssistAI-bot/uploads/statements/report_20-06-2025_16-12-03.pdf"
        if not os.path.exists(pdf_file):
            print(f"‚ùå PDF —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {pdf_file}")
            return
        
        print(f"üîç –¢–µ—Å—Ç—É—î–º–æ PDF –ø–∞—Ä—Å–∏–Ω–≥: {pdf_file}")
        
        # –ü—Ä—è–º–∏–π –≤–∏–∫–ª–∏–∫ –º–µ—Ç–æ–¥—É
        transactions = parser._parse_monobank_pdf(pdf_file)
        
        print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —É—Å–ø—ñ—à–Ω–∏–π!")
        print(f"üìà –ó–Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: {len(transactions)}")
        
        if transactions:
            print("\nüìã –ü–µ—Ä—à—ñ 3 —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:")
            for i, transaction in enumerate(transactions[:3]):
                print(f"  {i+1}. {transaction.get('date')} {transaction.get('time')}")
                print(f"     –°—É–º–∞: {transaction.get('amount')} –≥—Ä–Ω ({transaction.get('type')})")
                print(f"     –û–ø–∏—Å: {transaction.get('description')}")
                print()
        else:
            print("‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_pdf_parsing_direct()
