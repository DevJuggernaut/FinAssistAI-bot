#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —â–æ PDF –∑–≤—ñ—Ç–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –±–µ–∑ –µ–º–æ–¥–∑—ñ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from handlers.analytics_handler import create_pdf_report, create_simple_text_report

class MockUser:
    def __init__(self):
        self.username = 'test_user'
        self.telegram_id = 12345

def test_pdf_without_emoji():
    """–¢–µ—Å—Ç—É—î PDF –∑–≤—ñ—Ç –±–µ–∑ –µ–º–æ–¥–∑—ñ"""
    user = MockUser()
    transactions = []
    
    stats = {
        'total_income': 15000,
        'total_expenses': 12000,
        'balance': 3000,
        'category_expenses': {
            '–á–∂–∞': 5000,
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': 3000,
            '–†–æ–∑–≤–∞–≥–∏': 2000,
            '–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ': 2000
        },
        'period': '30 –¥–Ω—ñ–≤'
    }
    
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è PDF –∑–≤—ñ—Ç—É –±–µ–∑ –µ–º–æ–¥–∑—ñ...")
    
    try:
        pdf_buffer = create_pdf_report(user, transactions, stats)
        pdf_size = len(pdf_buffer.getvalue())
        print(f"‚úÖ PDF —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ, —Ä–æ–∑–º—ñ—Ä: {pdf_size} –±–∞–π—Ç")
        return True
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PDF: {e}")
        return False

def test_text_without_emoji():
    """–¢–µ—Å—Ç—É—î —Ç–µ–∫—Å—Ç–æ–≤–∏–π –∑–≤—ñ—Ç –±–µ–∑ –µ–º–æ–¥–∑—ñ"""
    user = MockUser()
    transactions = []
    
    stats = {
        'total_income': 15000,
        'total_expenses': 12000,
        'balance': 3000,
        'category_expenses': {
            '–á–∂–∞': 5000,
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': 3000,
            '–†–æ–∑–≤–∞–≥–∏': 2000,
            '–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ': 2000
        },
        'period': '30 –¥–Ω—ñ–≤'
    }
    
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–≤—ñ—Ç—É –±–µ–∑ –µ–º–æ–¥–∑—ñ...")
    
    try:
        text_buffer = create_simple_text_report(user, transactions, stats)
        text_content = text_buffer.getvalue().decode('utf-8')
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–∏—Ö –µ–º–æ–¥–∑—ñ
        problematic_emojis = ['üìä', 'üí∞', 'üìà', 'üí°', 'üéØ', '‚ö†Ô∏è', '‚úÖ', 'üëç', 'üìÖ', 'üö®', 'üéâ', 'üë§', 'üè¶', 'üì±', 'üíº']
        found_emojis = []
        
        for emoji in problematic_emojis:
            if emoji in text_content:
                found_emojis.append(emoji)
        
        if found_emojis:
            print(f"‚ö†Ô∏è  –ó–Ω–∞–π–¥–µ–Ω–æ –µ–º–æ–¥–∑—ñ –≤ —Ç–µ–∫—Å—Ç—ñ: {', '.join(found_emojis)}")
            return False
        else:
            print("‚úÖ –ï–º–æ–¥–∑—ñ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–≤—ñ—Ç—É")
            return True
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–≤—ñ—Ç—É: {e}")
        return False

if __name__ == "__main__":
    print("=" * 50)
    print("–¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–í–Ü–¢–Ü–í –ë–ï–ó –ï–ú–û–î–ó–Ü")
    print("=" * 50)
    
    pdf_ok = test_pdf_without_emoji()
    text_ok = test_text_without_emoji()
    
    print("\n" + "=" * 50)
    if pdf_ok and text_ok:
        print("üéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–î–ï–ù–û! –ï–º–æ–¥–∑—ñ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ PDF –∑–≤—ñ—Ç—ñ–≤.")
    else:
        print("‚ùå –î–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ. –ü–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è.")
    print("=" * 50)
