#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –ª–æ–≥—ñ–∫–∏ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 7 –¥–Ω—ñ–≤ –¥–ª—è —Ç–∏–∂–Ω–µ–≤–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É
"""

from datetime import datetime, timedelta

def test_week_keys_logic():
    """–¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—é—á—ñ–≤ –¥–ª—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 7 –¥–Ω—ñ–≤"""
    print("üß™ –¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 7 –¥–Ω—ñ–≤...")
    
    now = datetime.now()
    
    print(f"–°—å–æ–≥–æ–¥–Ω—ñ: {now.strftime('%A, %d.%m.%Y %H:%M')}")
    print("\n–û—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤ (–Ω–æ–≤–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º):")
    
    # –õ–æ–≥—ñ–∫–∞ –∑ analytics_handler.py
    all_keys = []
    
    for i in range(6, -1, -1):  # –≤—ñ–¥ 6 –¥–Ω—ñ–≤ —Ç–æ–º—É –¥–æ —Å—å–æ–≥–æ–¥–Ω—ñ
        date = now - timedelta(days=i)
        if i == 0:
            key = f"–°—å–æ–≥–æ–¥–Ω—ñ ({date.strftime('%d.%m')})"
        elif i == 1:
            key = f"–í—á–æ—Ä–∞ ({date.strftime('%d.%m')})"
        else:
            weekdays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–ù–¥']
            weekday_name = weekdays[date.weekday()]
            key = f"{weekday_name} ({date.strftime('%d.%m')})"
        
        all_keys.append(key)
        print(f"  {7-i}. {key} ({date.strftime('%A')})")
    
    print(f"\n–í—Å—å–æ–≥–æ –∫–ª—é—á—ñ–≤: {len(all_keys)}")
    print("–ü–æ—Ä—è–¥–æ–∫ –∫–ª—é—á—ñ–≤ (–≤—ñ–¥ –Ω–∞–π—Å—Ç–∞—Ä—à–æ–≥–æ –¥–æ –Ω–∞–π–Ω–æ–≤—ñ—à–æ–≥–æ):")
    for i, key in enumerate(all_keys, 1):
        print(f"  {i}. {key}")
    
    return all_keys

def test_transaction_key_generation():
    """–¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—é—á—ñ–≤ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π"""
    print("\nüîÑ –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—é—á—ñ–≤ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π...")
    
    now = datetime.now()
    
    # –°–∏–º—É–ª—é—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤
    test_dates = []
    for i in range(7):
        test_dates.append(now - timedelta(days=i))
    
    print("–ö–ª—é—á—ñ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:")
    for date in test_dates:
        days_ago = (now.date() - date.date()).days
        
        if days_ago == 0:
            key = f"–°—å–æ–≥–æ–¥–Ω—ñ ({date.strftime('%d.%m')})"
        elif days_ago == 1:
            key = f"–í—á–æ—Ä–∞ ({date.strftime('%d.%m')})"
        else:
            weekdays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–ù–¥']
            weekday_name = weekdays[date.weekday()]
            key = f"{weekday_name} ({date.strftime('%d.%m')})"
        
        print(f"  {date.strftime('%Y-%m-%d %A')} -> {key}")

def test_date_range():
    """–¢–µ—Å—Ç—É—î–º–æ –¥—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –¥–ª—è —Ç–∏–∂–Ω—è"""
    print("\nüìÖ –¢–µ—Å—Ç—É—î–º–æ –¥—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –¥–ª—è —Ç–∏–∂–Ω–µ–≤–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É...")
    
    now = datetime.now()
    
    # –õ–æ–≥—ñ–∫–∞ –∑ analytics_handler.py –¥–ª—è —Ç–∏–∂–Ω—è
    start_date = (now - timedelta(days=6)).replace(hour=0, minute=0, second=0, microsecond=0)
    end_date = now
    
    print(f"–ü–æ—á–∞—Ç–æ–∫ –ø–µ—Ä—ñ–æ–¥—É: {start_date.strftime('%Y-%m-%d %H:%M:%S (%A)')}")
    print(f"–ö—ñ–Ω–µ—Ü—å –ø–µ—Ä—ñ–æ–¥—É: {end_date.strftime('%Y-%m-%d %H:%M:%S (%A)')}")
    print(f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤: {(end_date.date() - start_date.date()).days + 1}")
    
    print("\n–î–Ω—ñ —É –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ:")
    current = start_date.date()
    day_count = 1
    while current <= end_date.date():
        days_ago = (now.date() - current).days
        if days_ago == 0:
            label = "—Å—å–æ–≥–æ–¥–Ω—ñ"
        elif days_ago == 1:
            label = "–≤—á–æ—Ä–∞"
        else:
            label = f"{days_ago} –¥–Ω—ñ–≤ —Ç–æ–º—É"
        
        print(f"  {day_count}. {current.strftime('%Y-%m-%d %A')} ({label})")
        current += timedelta(days=1)
        day_count += 1

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–∫–∏ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö 7 –¥–Ω—ñ–≤ –¥–ª—è —Ç–∏–∂–Ω–µ–≤–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É")
    print("=" * 70)
    
    # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—é—á—ñ–≤
    all_keys = test_week_keys_logic()
    
    # –¢–µ—Å—Ç—É—î–º–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∫–ª—é—á—ñ–≤ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    test_transaction_key_generation()
    
    # –¢–µ—Å—Ç—É—î–º–æ –¥—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç
    test_date_range()
    
    print("\n‚úÖ –õ–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞!")
    print("\nüìã –í–∏—Å–Ω–æ–≤–∫–∏:")
    print("  ‚úÖ –ü–æ–∫–∞–∑—É—é—Ç—å—Å—è –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤ (–≤–∫–ª—é—á–∞—é—á–∏ —Å—å–æ–≥–æ–¥–Ω—ñ)")
    print("  ‚úÖ –°—å–æ–≥–æ–¥–Ω—ñ —Ç–∞ –≤—á–æ—Ä–∞ –º–∞—é—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø–æ–∑–Ω–∞—á–∫–∏")
    print("  ‚úÖ –Ü–Ω—à—ñ –¥–Ω—ñ –ø–æ–∫–∞–∑—É—é—Ç—å –¥–µ–Ω—å —Ç–∏–∂–Ω—è + –¥–∞—Ç—É")
    print("  ‚úÖ –ü–æ—Ä—è–¥–æ–∫ –≤—ñ–¥ –Ω–∞–π—Å—Ç–∞—Ä—à–æ–≥–æ –¥–æ –Ω–∞–π–Ω–æ–≤—ñ—à–æ–≥–æ –¥–Ω—è")
    print("  ‚úÖ –î—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ")

if __name__ == "__main__":
    main()
