#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥—É PDF –≤–∏–ø–∏—Å–æ–∫ Monobank
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.statement_parser import StatementParser
import tempfile

def test_monobank_pdf_parsing():
    """–¢–µ—Å—Ç—É—î –ø–∞—Ä—Å–∏–Ω–≥ PDF –≤–∏–ø–∏—Å–æ–∫ Monobank"""
    
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Å–∏–Ω–≥—É PDF –≤–∏–ø–∏—Å–æ–∫ Monobank")
    print("=" * 60)
    
    parser = StatementParser()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ, —è–∫–∏–π –º–æ–∂–µ –∑—É—Å—Ç—Ä—ñ—Ç–∏—Å—è –≤ Monobank PDF
    test_pdf_text = """
    –í–ò–ü–ò–°–ö–ê –ü–û –ö–ê–†–¢–¶–Ü
    –ü–µ—Ä—ñ–æ–¥: 01.01.2025 - 31.01.2025
    
    –î–∞—Ç–∞ —ñ —á–∞—Å –æ–ø–µ—Ä–∞—Ü—ñ—ó    –î–µ—Ç–∞–ª—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó                 MCC    –°—É–º–∞ –≤ –≤–∞–ª—é—Ç—ñ –∫–∞—Ä—Ç–∫–∏ (UAH)
    19.06.2025 14:42:15   –ü–æ–∫—É–ø–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω—ñ –°—ñ–ª—å–ø–æ        5411   -150.50
    20.06.2025 09:30:00   McDonald's –ö–∏—ó–≤                  5814   -89.25
    21.06.2025 16:15:30   Uber –ø–æ—ó–∑–¥–∫–∞                     4121   -95.00
    22.06.2025 12:00:00   –ö–µ—à–±–µ–∫ –≤—ñ–¥ –ø–æ–∫—É–ø–∫–∏               0000   +25.50
    23.06.2025 18:45:12   –ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏               4900   -850.00
    24.06.2025 10:30:00   –ó–∞—Ä–ø–ª–∞—Ç–∞ —Å—ñ—á–µ–Ω—å                  0000   +15000.00
    """
    
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É Monobank...")
    print("-" * 60)
    
    # –¢–µ—Å—Ç—É—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–∏–π –ø–∞—Ä—Å–∏–Ω–≥
    transactions = parser._parse_text_transactions(test_pdf_text)
    
    if transactions:
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        
        for i, trans in enumerate(transactions, 1):
            print(f"\n–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è {i}:")
            print(f"  üìÖ –î–∞—Ç–∞: {trans.get('date', 'N/A')}")
            print(f"  üïê –ß–∞—Å: {trans.get('time', 'N/A')}")
            print(f"  üí∞ –°—É–º–∞: {trans.get('amount', 'N/A')} UAH")
            print(f"  üìù –û–ø–∏—Å: {trans.get('description', 'N/A')}")
            print(f"  üìä –¢–∏–ø: {trans.get('type', 'N/A')}")
            print(f"  üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {trans.get('category', 'N/A')}")
            print(f"  üè¶ –î–∂–µ—Ä–µ–ª–æ: {trans.get('source', 'N/A')}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –æ—Å–Ω–æ–≤–Ω—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ
            if not trans.get('description') or trans.get('description') == '–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è':
                print("  ‚ö†Ô∏è  –£–≤–∞–≥–∞: –û–ø–∏—Å –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ –∞–±–æ –∑–∞–≥–∞–ª—å–Ω–∏–π")
            else:
                print("  ‚úÖ –û–ø–∏—Å —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                
            if not trans.get('category') or trans.get('category') == 'other':
                print("  ‚ö†Ô∏è  –£–≤–∞–≥–∞: –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –∑–∞–≥–∞–ª—å–Ω–∞")
            else:
                print("  ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ")
    else:
        print("‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–ò –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_transactions = len(transactions)
    with_descriptions = sum(1 for t in transactions if t.get('description') and t.get('description') != '–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è')
    with_categories = sum(1 for t in transactions if t.get('category') and t.get('category') != 'other')
    with_dates = sum(1 for t in transactions if t.get('date'))
    with_amounts = sum(1 for t in transactions if t.get('amount'))
    
    print(f"‚úÖ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: {total_transactions}")
    print(f"‚úÖ –ó —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∏–º–∏ –æ–ø–∏—Å–∞–º–∏: {with_descriptions}/{total_transactions} ({(with_descriptions/total_transactions)*100:.1f}%)")
    print(f"‚úÖ –ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏: {with_categories}/{total_transactions} ({(with_categories/total_transactions)*100:.1f}%)")
    print(f"‚úÖ –ó –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –¥–∞—Ç–∞–º–∏: {with_dates}/{total_transactions} ({(with_dates/total_transactions)*100:.1f}%)")
    print(f"‚úÖ –ó –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ —Å—É–º–∞–º–∏: {with_amounts}/{total_transactions} ({(with_amounts/total_transactions)*100:.1f}%)")
    
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å —Ç–µ—Å—Ç—É
    success_rate = (with_descriptions + with_categories + with_dates + with_amounts) / (total_transactions * 4)
    
    if success_rate >= 0.8:  # 80% —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ
        print(f"\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù–û! –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {success_rate*100:.1f}%")
        print("PDF –ø–∞—Ä—Å–∏–Ω–≥ Monobank –ø—Ä–∞—Ü—é—î –¥–æ–±—Ä–µ.")
        return True
    else:
        print(f"\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù–û! –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {success_rate*100:.1f}%")
        print("–ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ PDF –ø–∞—Ä—Å–∏–Ω–≥ –¥–ª—è Monobank.")
        return False

def test_different_monobank_formats():
    """–¢–µ—Å—Ç—É—î —Ä—ñ–∑–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏ —Ç–µ–∫—Å—Ç—É –∑ Monobank PDF"""
    
    print("\nüîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤ —Ç–µ–∫—Å—Ç—É Monobank:")
    print("=" * 60)
    
    parser = StatementParser()
    
    test_formats = [
        # –§–æ—Ä–º–∞—Ç 1: –ó –ø–æ–≤–Ω–∏–º —á–∞—Å–æ–º
        "19.06.2025 14:42:15 –ü–æ–∫—É–ø–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω—ñ –ê–¢–ë -150.50 UAH",
        
        # –§–æ—Ä–º–∞—Ç 2: –ë–µ–∑ —Å–µ–∫—É–Ω–¥
        "20.06.2025 09:30 McDonald's –ö–∏—ó–≤ -89.25",
        
        # –§–æ—Ä–º–∞—Ç 3: –¢—ñ–ª—å–∫–∏ –¥–∞—Ç–∞
        "21.06.2025 Uber –ø–æ—ó–∑–¥–∫–∞ –¥–æ –∞–µ—Ä–æ–ø–æ—Ä—Ç—É -95.00 –≥—Ä–Ω",
        
        # –§–æ—Ä–º–∞—Ç 4: –ó –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –ø—Ä–æ–±—ñ–ª–∞–º–∏
        "22.06.2025  12:00:00    –ö–µ—à–±–µ–∫ –≤—ñ–¥ –ø–æ–∫—É–ø–∫–∏     +25.50",
        
        # –§–æ—Ä–º–∞—Ç 5: –°–∫–ª–∞–¥–Ω–∏–π –æ–ø–∏—Å
        "23.06.2025 18:45 –ü–ª–∞—Ç—ñ–∂ –∑–∞ –∫–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –ñ–ï–ö ‚Ññ1 -850.00 UAH",
        
        # –§–æ—Ä–º–∞—Ç 6: –î–æ—Ö–æ–¥–∏
        "24.06.2025 10:30:00 –ó–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∑–∞—Ä–æ–±—ñ—Ç–Ω–æ—ó –ø–ª–∞—Ç–∏ –∑–∞ —Å—ñ—á–µ–Ω—å +15000.00"
    ]
    
    total_formats = len(test_formats)
    parsed_successfully = 0
    
    for i, test_text in enumerate(test_formats, 1):
        print(f"\n–§–æ—Ä–º–∞—Ç {i}: {test_text}")
        
        transactions = parser._parse_text_transactions(test_text)
        
        if transactions and len(transactions) > 0:
            trans = transactions[0]
            print(f"  ‚úÖ –†–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ: {trans.get('description', 'N/A')} | {trans.get('amount', 'N/A')} | {trans.get('category', 'N/A')}")
            parsed_successfully += 1
        else:
            print(f"  ‚ùå –ù–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {parsed_successfully}/{total_formats} —Ñ–æ—Ä–º–∞—Ç—ñ–≤ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
    
    return parsed_successfully / total_formats >= 0.8

if __name__ == "__main__":
    print("üè¶ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ü–û–ö–†–ê–©–ï–ù–û–ì–û –ü–ê–†–°–ò–ù–ì–£ PDF MONOBANK")
    print("=" * 70)
    
    test1_passed = test_monobank_pdf_parsing()
    test2_passed = test_different_monobank_formats()
    
    print("\n" + "=" * 70)
    print("üìã –ü–Ü–î–°–£–ú–û–ö –¢–ï–°–¢–£–í–ê–ù–ù–Ø PDF –ü–ê–†–°–ò–ù–ì–£:")
    
    if test1_passed and test2_passed:
        print("‚úÖ –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ—Å—Ç: –ü–†–û–ô–î–ï–ù–û")
        print("‚úÖ –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç—ñ–≤: –ü–†–û–ô–î–ï–ù–û")
        print("\nüéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–î–ï–ù–û! –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π PDF –ø–∞—Ä—Å–∏–Ω–≥ –≥–æ—Ç–æ–≤–∏–π.")
    else:
        if not test1_passed:
            print("‚ùå –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ—Å—Ç: –ù–ï –ü–†–û–ô–î–ï–ù–û")
        else:
            print("‚úÖ –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ—Å—Ç: –ü–†–û–ô–î–ï–ù–û")
            
        if not test2_passed:
            print("‚ùå –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç—ñ–≤: –ù–ï –ü–†–û–ô–î–ï–ù–û")
        else:
            print("‚úÖ –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç—ñ–≤: –ü–†–û–ô–î–ï–ù–û")
            
        print("\n‚ö†Ô∏è  –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∫–æ–≤–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ PDF –ø–∞—Ä—Å–∏–Ω–≥.")
