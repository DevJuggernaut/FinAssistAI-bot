#!/usr/bin/env python3
"""
–§—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –∑ —Ä–µ–∞–ª—å–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é Monobank
"""

import pandas as pd
import tempfile
import os
import sys

def create_realistic_monobank_xls():
    """
    –°—Ç–≤–æ—Ä—é—î —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–π XLS —Ñ–∞–π–ª –∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é —è–∫ —É Monobank
    """
    # –°—Ç–≤–æ—Ä—é—î–º–æ DataFrame –∑ —Ä–µ–∞–ª—å–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é
    data = []
    
    # –î–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é (—è–∫ —É —Ä–µ–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—ñ)
    header_info = [
        ["–ö–ª—ñ—î–Ω—Ç: –¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á", None, None, None, None, None, None, None, None, None],
        ["–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: 01.01.1990", None, None, None, None, None, None, None, None, None],
        ["–Ü–ü–ù: 1234567890", None, None, None, None, None, None, None, None, None],
        [None, None, None, None, None, None, None, None, None, None],
        ["–°–µ—Ä—ñ—è/–Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç—É: AB123456", None, None, None, None, None, None, None, None, None],
        ["–ö–∏–º –≤–∏–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç: 1234", None, None, None, None, None, None, None, None, None],
        ["–ö–æ–ª–∏ –≤–∏–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç: 01.01.2010", None, None, None, None, None, None, None, None, None],
        ["–ê–¥—Ä–µ—Å–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: –£–∫—Ä–∞—ó–Ω–∞", None, None, None, None, None, None, None, None, None],
        [None, None, None, None, None, None, None, None, None, None],
        ["–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ –∫–∞—Ä—Ç—Ü—ñ: 4441 ****", None, None, None, None, None, None, None, None, None],
        ["–†–∞—Ö—É–Ω–æ–∫: UA123456789", None, None, None, None, None, None, None, None, None],
        ["–ü–µ—Ä—ñ–æ–¥: 01.06.2025 ‚Äì 20.06.2025", None, None, None, None, None, None, None, None, None],
        [None, None, None, None, None, None, None, None, None, None],
        ["–ö—Ä–µ–¥–∏—Ç–Ω–∏–π –ª—ñ–º—ñ—Ç: 0.00 UAH", None, None, None, None, None, None, None, None, None],
        ["–ó–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å: 0.00 UAH", None, None, None, None, None, None, None, None, None],
        [None, None, None, None, None, None, None, None, None, None],
        ["–ë–∞–ª–∞–Ω—Å –Ω–∞ –ø–æ—á–∞—Ç–æ–∫: 10000.00", None, None, None, None, None, None, None, None, None],
        ["–ë–∞–ª–∞–Ω—Å –Ω–∞ –∫—ñ–Ω–µ—Ü—å: 8500.00", None, None, None, None, None, None, None, None, None],
        [None, None, None, None, None, None, None, None, None, None],
        ["–ì–∞—Ä–∞–Ω—Ç—ñ—ó –≤–∫–ª–∞–¥—ñ–≤", None, None, None, None, None, None, None, None, None],
        [None, None, None, None, None, None, None, None, None, None],
    ]
    
    # –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
    headers = [
        "–î–∞—Ç–∞ i —á–∞—Å –æ–ø–µ—Ä–∞—Ü—ñ—ó", "–î–µ—Ç–∞–ª—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó", "MCC", "–°—É–º–∞ –≤ –≤–∞–ª—é—Ç—ñ –∫–∞—Ä—Ç–∫–∏ (UAH)",
        "–°—É–º–∞ –≤ –≤–∞–ª—é—Ç—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó", "–í–∞–ª—é—Ç–∞", "–ö—É—Ä—Å", "–°—É–º–∞ –∫–æ–º—ñ—Å—ñ–π (UAH)", 
        "–°—É–º–∞ –∫–µ—à–±–µ–∫—É (UAH)", "–ó–∞–ª–∏—à–æ–∫ –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó"
    ]
    
    # –î–æ–¥–∞—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
    transactions = [
        ["20.06.2025 16:30:15", "–ê–¢–ë –ú–∞—Ä–∫–µ—Ç", "5411", "-250.50", "-250.50", "UAH", "‚Äî", "‚Äî", "‚Äî", "8500.00"],
        ["20.06.2025 14:15:22", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "4829", "5000.00", "5000.00", "UAH", "‚Äî", "‚Äî", "‚Äî", "8750.50"],
        ["19.06.2025 19:45:33", "Steam", "5816", "-299.99", "-299.99", "UAH", "‚Äî", "‚Äî", "‚Äî", "3750.50"],
        ["19.06.2025 12:30:44", "–°—ñ–ª—å–ø–æ", "5411", "-180.25", "-180.25", "UAH", "‚Äî", "‚Äî", "1.35", "4050.49"],
        ["18.06.2025 21:15:55", "Netflix", "5815", "-449.00", "-10.99", "USD", "40.85", "‚Äî", "‚Äî", "4230.74"],
        ["18.06.2025 15:20:11", "McDonald's", "5814", "-156.00", "-156.00", "UAH", "‚Äî", "‚Äî", "‚Äî", "4679.74"],
        ["17.06.2025 10:45:28", "–ü–µ—Ä–µ–∫–∞–∑ –≤—ñ–¥ –¥—Ä—É–≥–∞", "4829", "500.00", "500.00", "UAH", "‚Äî", "‚Äî", "‚Äî", "4835.74"],
        ["16.06.2025 18:30:39", "–ù–æ–≤–∞ –ü–æ—à—Ç–∞", "4215", "-85.00", "-85.00", "UAH", "‚Äî", "‚Äî", "‚Äî", "4335.74"],
    ]
    
    # –û–±'—î–¥–Ω—É—î–º–æ –≤—Å–µ —Ä–∞–∑–æ–º
    all_data = header_info + [headers] + transactions
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ DataFrame
    df = pd.DataFrame(all_data)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
    temp_file = tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False)
    temp_file.close()
    
    # –ó–∞–ø–∏—Å—É—î–º–æ –≤ Excel
    df.to_excel(temp_file.name, sheet_name='–†—É—Ö –∫–æ—à—Ç—ñ–≤ –ø–æ –∫–∞—Ä—Ç—Ü—ñ', index=False, header=False)
    
    return temp_file.name

def test_realistic_parser():
    """
    –¢–µ—Å—Ç—É—î –ø–∞—Ä—Å–µ—Ä –∑ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–º —Ñ–∞–π–ª–æ–º
    """
    try:
        from services.statement_parser import StatementParser
        
        print("üß™ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É...")
        test_file = create_realistic_monobank_xls()
        print(f"‚úÖ –§–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ: {test_file}")
        
        print("\nüîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Å–µ—Ä–∞...")
        parser = StatementParser()
        transactions = parser._parse_monobank_xls(test_file)
        
        print(f"\n‚úÖ –£—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:")
        print("-" * 60)
        
        total_income = 0
        total_expense = 0
        
        for i, transaction in enumerate(transactions, 1):
            print(f"üìä –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è {i}:")
            print(f"   üìÖ –î–∞—Ç–∞: {transaction['date']}")
            print(f"   üïê –ß–∞—Å: {transaction['time']}")
            print(f"   üí∞ –°—É–º–∞: {transaction['amount']} UAH")
            print(f"   üìù –¢–∏–ø: {transaction['type']}")
            print(f"   üìÑ –û–ø–∏—Å: {transaction['description']}")
            print()
            
            if transaction['type'] == 'income':
                total_income += transaction['amount']
            else:
                total_expense += transaction['amount']
        
        print(f"üìà –ó–∞–≥–∞–ª—å–Ω–∏–π –¥–æ—Ö—ñ–¥: {total_income} UAH")
        print(f"üìâ –ó–∞–≥–∞–ª—å–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏: {total_expense} UAH")
        print(f"üí∞ –†—ñ–∑–Ω–∏—Ü—è: {total_income - total_expense} UAH")
        
        # –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª
        os.unlink(test_file)
        print(f"\nüóëÔ∏è –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –§—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ XLS Monobank –∑ —Ä–µ–∞–ª—å–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é")
    print("=" * 60)
    
    success = test_realistic_parser()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–®–û–í –£–°–ü–Ü–®–ù–û!")
        print("‚úÖ –ü–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏ –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ Monobank")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π—à–æ–≤. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–º–∏–ª–∫–∏ –≤–∏—â–µ.")
