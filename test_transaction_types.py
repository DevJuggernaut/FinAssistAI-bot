#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥—ñ–∫–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è PrivatBank
"""

def test_transaction_type_logic():
    """–¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–∫—É –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π"""
    
    # –¢–µ—Å—Ç–æ–≤—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —Ä—ñ–∑–Ω–∏–º–∏ –æ–ø–∏—Å–∞–º–∏ —Ç–∞ —Å—É–º–∞–º–∏
    test_transactions = [
        {'amount': 105.0, 'description': 'Uklon', 'expected': 'expense'},
        {'amount': 186.0, 'description': '–°—ñ–º23', 'expected': 'income'},
        {'amount': 0.99, 'description': 'Apple', 'expected': 'expense'},
        {'amount': 450.0, 'description': '–§–û–ü –ú–µ–ª—å–Ω–∏–∫ –†–æ–º–∞–Ω –ê–Ω–¥—Ä–∏–π–æ–≤–∏—á', 'expected': 'income'},
        {'amount': 65.0, 'description': '–ù–æ–≤–∞ –ø–æ—à—Ç–∞', 'expected': 'expense'},
        {'amount': 458.84, 'description': '–°—ñ–ª—å–ø–æ', 'expected': 'expense'},
        {'amount': 2.49, 'description': 'Spotify', 'expected': 'expense'},
        {'amount': 528.66, 'description': '–°—ñ–ª—å–ø–æ', 'expected': 'expense'},
        {'amount': 100.0, 'description': '–ê–¢–ë', 'expected': 'expense'},
        {'amount': 118.5, 'description': '–ê–¢–ë', 'expected': 'expense'},
        {'amount': 200.0, 'description': '–ù–∞ –∫–∞—Ä—Ç–∫—É', 'expected': 'income'},
        {'amount': 1005.03, 'description': '–°—Ç–µ–ø–∞–Ω–æ–≤ –Ñ.', 'expected': 'income'},
        {'amount': -105.0, 'description': '–Ø–∫—ñ–π—Å—å –≤–∏—Ç—Ä–∞—Ç–∞', 'expected': 'expense'},
    ]
    
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–∫–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π\n")
    print("=" * 70)
    
    correct = 0
    total = len(test_transactions)
    
    for i, trans in enumerate(test_transactions, 1):
        amount = trans['amount']
        description = trans['description']
        expected = trans['expected']
        
        # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –ª–æ–≥—ñ–∫—É –∑ show_transactions_preview
        trans_type = 'expense'  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        
        if isinstance(amount, (int, float)):
            if amount < 0:
                trans_type = 'expense'
                amount = abs(amount)
            else:
                # –î–ª—è –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö —Å—É–º –∞–Ω–∞–ª—ñ–∑—É—î–º–æ –æ–ø–∏—Å
                description_lower = description.lower()
                # –°–ø–∏—Å–æ–∫ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ –¥–ª—è –≤–∏—Ç—Ä–∞—Ç
                expense_keywords = [
                    '–∞—Ç–±', '—Å—ñ–ª—å–ø–æ', '—Ñ–æ—Ä–∞', '–∞—à–∞–Ω', 'metro', '–∫–∞—Ä—Ä–µ—Ñ—É—Ä',
                    '–º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å', 'kfc', 'burger', 'pizza', '–∫–∞—Ñ–µ', '—Ä–µ—Å—Ç–æ—Ä–∞–Ω',
                    '–∞–ø—Ç–µ–∫–∞', '—Ñ–∞—Ä–º–∞—Ü—ñ—è', 'pharmacy',
                    '–∑–∞–ø—Ä–∞–≤–∫–∞', 'wog', 'okko', 'shell', '–ø–∞–ª–∏–≤–æ',
                    'uber', 'bolt', 'uklon', 'taxi', '—Ç–∞–∫—Å—ñ',
                    'apple', 'google', 'steam', 'netflix', 'spotify',
                    '–Ω–æ–≤–∞ –ø–æ—à—Ç–∞', '—É–∫—Ä–ø–æ—à—Ç–∞', 'deliveri',
                    '–æ–ø–ª–∞—Ç–∞', '–ø–ª–∞—Ç—ñ–∂', '–∫—É–ø—ñ–≤–ª—è', '–ø–æ–∫—É–ø–∫–∞'
                ]
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –æ–ø–∏—Å –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –≤–∏—Ç—Ä–∞—Ç
                is_expense = any(keyword in description_lower for keyword in expense_keywords)
                
                if is_expense:
                    trans_type = 'expense'
                else:
                    trans_type = 'income'
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        status = "‚úÖ" if trans_type == expected else "‚ùå"
        if trans_type == expected:
            correct += 1
            
        print(f"{i:2d}. {status} {amount:8.2f} ‚Ç¥ | {description:25s} | {trans_type:7s} (–æ—á—ñ–∫—É–≤–∞–ª–æ—Å—å: {expected})")
    
    print("=" * 70)
    accuracy = (correct / total) * 100
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {correct}/{total} –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö ({accuracy:.1f}% —Ç–æ—á–Ω—ñ—Å—Ç—å)")
    
    if accuracy >= 90:
        print("üéâ –í—ñ–¥–º—ñ–Ω–Ω–æ! –õ–æ–≥—ñ–∫–∞ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
    elif accuracy >= 70:
        print("‚ö†Ô∏è –õ–æ–≥—ñ–∫–∞ –ø–æ—Ç—Ä–µ–±—É—î –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è.")
    else:
        print("‚ùå –õ–æ–≥—ñ–∫–∞ –ø–æ—Ç—Ä–µ–±—É—î —Å–µ—Ä–π–æ–∑–Ω–∏—Ö –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å.")

if __name__ == "__main__":
    test_transaction_type_logic()
