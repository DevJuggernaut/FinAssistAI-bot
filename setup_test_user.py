#!/usr/bin/env python3
"""
–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ä–∞—Ö—É–Ω–∫–∞–º–∏ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.session import init_db, Session
from database.models import User, Category, Account, TransactionType
from database.db_operations import get_or_create_user
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def setup_test_user():
    """–ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–æ–≤–∏–º–∏ —Ä–∞—Ö—É–Ω–∫–∞–º–∏ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏"""
    try:
        init_db()
        session = Session()
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        test_user_id = 123456789
        user = get_or_create_user(test_user_id)
        print(f"‚úÖ User: {user.id}, telegram_id: {user.telegram_id}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î —Ä–∞—Ö—É–Ω–∫–∏
        existing_accounts = session.query(Account).filter_by(user_id=user.id).all()
        if not existing_accounts:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫
            from database.models import AccountType
            account = Account(
                user_id=user.id,
                name="–û—Å–Ω–æ–≤–Ω–∞ –∫–∞—Ä—Ç–∫–∞",
                account_type=AccountType.BANK_CARD,
                balance=0.0,
                currency="UAH",
                is_main=True
            )
            session.add(account)
            print("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ä–∞—Ö—É–Ω–æ–∫")
        else:
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(existing_accounts)} —Ä–∞—Ö—É–Ω–∫—ñ–≤")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        existing_categories = session.query(Category).filter_by(user_id=user.id).all()
        if not existing_categories:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∏—Ç—Ä–∞—Ç
            expense_categories = [
                ("–ü—Ä–æ–¥—É–∫—Ç–∏", "üõí", "expense"),
                ("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "üöó", "expense"),
                ("–†–æ–∑–≤–∞–≥–∏", "üé¨", "expense"),
                ("–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ", "üí°", "expense"),
                ("–Ü–Ω—à–µ –≤–∏—Ç—Ä–∞—Ç–∏", "üí∏", "expense"),
            ]
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–æ—Ö–æ–¥—ñ–≤
            income_categories = [
                ("–ó–∞—Ä–ø–ª–∞—Ç–∞", "üí∞", "income"),
                ("–ü—ñ–¥—Ä–æ–±—ñ—Ç–æ–∫", "üíµ", "income"),
                ("–Ü–Ω—à–µ –¥–æ—Ö–æ–¥–∏", "üí∏", "income"),
            ]
            
            all_categories = expense_categories + income_categories
            
            for name, icon, cat_type in all_categories:
                category = Category(
                    user_id=user.id,
                    name=name,
                    icon=icon,
                    type=cat_type
                )
                session.add(category)
            
            print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {len(all_categories)} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
        else:
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(existing_categories)} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
        
        session.commit()
        session.close()
        print("‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è: {e}")
        logger.exception("Setup error")

if __name__ == "__main__":
    setup_test_user()
