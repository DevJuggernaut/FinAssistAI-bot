#!/bin/bash

# –®–≤–∏–¥–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –ø—ñ—Å–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è

set -e

# –ö–æ–ª—å–æ—Ä–∏
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç –ê–Ω–∞–ª—ñ–∑ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö FinAssistAI${NC}"
echo "=================================="

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è
if [ -f ".env" ]; then
    source .env
    if [ -z "$DB_NAME" ]; then
        DB_NAME="finance_bot"
    fi
else
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª—ñ–∑—É
if [ -f "test_data_analysis.py" ]; then
    echo -e "${GREEN}üìä –ó–∞–ø—É—Å–∫–∞—é –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑...${NC}"
    echo ""
    python3 test_data_analysis.py
else
    echo "‚ùå –§–∞–π–ª test_data_analysis.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
    echo "üí° –í–∏–∫–æ–Ω—É—é –±–∞–∑–æ–≤–∏–π –∞–Ω–∞–ª—ñ–∑ —á–µ—Ä–µ–∑ SQL..."
    
    # –ë–∞–∑–æ–≤–∏–π –∞–Ω–∞–ª—ñ–∑ —á–µ—Ä–µ–∑ SQL
    PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME << EOF
\echo 'üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í:'
SELECT 
    COUNT(*) as total_users,
    COUNT(CASE WHEN created_at >= CURRENT_DATE THEN 1 END) as new_today
FROM users;

\echo ''
\echo 'üí∞ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–†–ê–ù–ó–ê–ö–¶–Ü–ô:'
SELECT 
    transaction_type,
    COUNT(*) as count,
    ROUND(AVG(amount::numeric), 2) as avg_amount,
    ROUND(SUM(amount::numeric), 2) as total_amount
FROM transactions 
GROUP BY transaction_type
ORDER BY transaction_type;

\echo ''
\echo 'üìä –¢–û–ü-5 –ö–ê–¢–ï–ì–û–†–Ü–ô –ó–ê –ö–Ü–õ–¨–ö–Ü–°–¢–Æ –¢–†–ê–ù–ó–ê–ö–¶–Ü–ô:'
SELECT 
    c.name,
    c.emoji,
    COUNT(t.id) as transaction_count,
    ROUND(SUM(t.amount::numeric), 2) as total_amount
FROM categories c
LEFT JOIN transactions t ON c.id = t.category_id
WHERE t.id IS NOT NULL
GROUP BY c.id, c.name, c.emoji
ORDER BY transaction_count DESC
LIMIT 5;

\echo ''
\echo 'üí° –û–°–¢–ê–ù–ù–Ü 5 –¢–†–ê–ù–ó–ê–ö–¶–Ü–ô:'
SELECT 
    t.transaction_type,
    c.emoji || ' ' || c.name as category,
    t.amount,
    t.description,
    TO_CHAR(t.created_at, 'DD.MM.YYYY HH24:MI') as created
FROM transactions t
JOIN categories c ON t.category_id = c.id
ORDER BY t.created_at DESC
LIMIT 5;

\echo ''
\echo 'üéØ –°–¢–ê–¢–£–° –ë–Æ–î–ñ–ï–¢–Ü–í:'
SELECT 
    bp.name as budget_name,
    bp.total_budget,
    COUNT(cb.id) as categories_count,
    ROUND(SUM(cb.allocated_amount::numeric), 2) as allocated_total
FROM budget_plans bp
LEFT JOIN category_budgets cb ON bp.id = cb.budget_plan_id
GROUP BY bp.id, bp.name, bp.total_budget
ORDER BY bp.created_at;
EOF
fi

echo ""
echo -e "${GREEN}‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
