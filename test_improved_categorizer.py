#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ–ª—ñ–ø—à–µ–Ω–æ–≥–æ ML –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.ml_categorizer import transaction_categorizer

def test_categorization():
    """–¢–µ—Å—Ç—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—é —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π"""
    
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–ª—ñ–ø—à–µ–Ω–æ–≥–æ ML –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –≤–∏—Ç—Ä–∞—Ç
    expense_tests = [
        "–ê–¢–ë –ú–∞—Ä–∫–µ—Ç",
        "–°—ñ–ª—å–ø–æ",
        "UBER",
        "Bolt Food",
        "–ö–∏—ó–≤–°—Ç–∞—Ä",
        "Netflix",
        "Rozetka",
        "–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å",
        "–ê–ø—Ç–µ–∫–∞",
        "WOG",
        "–ë–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è",  # –ó–∞–≥–∞–ª—å–Ω–∞ –Ω–∞–∑–≤–∞
        "",  # –ü–æ—Ä–æ–∂–Ω—ñ–π –æ–ø–∏—Å
    ]
    
    # –¢–µ—Å—Ç–æ–≤—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –¥–æ—Ö–æ–¥—ñ–≤
    income_tests = [
        "–ó–∞—Ä–ø–ª–∞—Ç–∞",
        "–ü–µ—Ä–µ–∫–∞–∑ –Ω–∞ –∫–∞—Ä—Ç–∫—É",
        "–§—Ä–∏–ª–∞–Ω—Å –ø—Ä–æ–µ–∫—Ç",
        "–ö–µ—à–±–µ–∫",
        "–ë–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è",  # –ó–∞–≥–∞–ª—å–Ω–∞ –Ω–∞–∑–≤–∞ –¥–ª—è –¥–æ—Ö–æ–¥—É
        "",  # –ü–æ—Ä–æ–∂–Ω—ñ–π –æ–ø–∏—Å –¥–ª—è –¥–æ—Ö–æ–¥—É
    ]
    
    print("\nüí∏ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—ó –≤–∏—Ç—Ä–∞—Ç:")
    print("-" * 40)
    
    for desc in expense_tests:
        category = transaction_categorizer.categorize_transaction(desc, 100.0, 'expense')
        print(f"'{desc}' ‚Üí {category['icon']} {category['name']} (ID: {category['id']})")
    
    print("\nüí∞ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–æ—Ö–æ–¥—ñ–≤:")
    print("-" * 40)
    
    for desc in income_tests:
        category = transaction_categorizer.categorize_transaction(desc, 100.0, 'income')
        print(f"'{desc}' ‚Üí {category['icon']} {category['name']} (ID: {category['id']})")
    
    print("\nüîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è suggest_category_for_bank_statement:")
    print("-" * 50)
    
    test_cases = [
        ("–ê–¢–ë –°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç", 'expense'),
        ("UBER –ø–æ—ó–∑–¥–∫–∞", 'expense'),
        ("–ü–µ—Ä–µ–∫–∞–∑ –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞", 'income'),
        ("", 'expense'),  # –ü–æ—Ä–æ–∂–Ω—ñ–π –æ–ø–∏—Å
        ("", 'income'),   # –ü–æ—Ä–æ–∂–Ω—ñ–π –æ–ø–∏—Å
    ]
    
    for desc, trans_type in test_cases:
        category = transaction_categorizer.suggest_category_for_bank_statement(desc, trans_type)
        emoji = "üí∏" if trans_type == 'expense' else "üí∞"
        print(f"{emoji} '{desc}' ({trans_type}) ‚Üí {category['icon']} {category['name']} (ID: {category['id']})")

if __name__ == "__main__":
    test_categorization()
