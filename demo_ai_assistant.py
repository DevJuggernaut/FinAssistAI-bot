#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –Ω–æ–≤–æ–≥–æ AI-–ø–æ–º—ñ—á–Ω–∏–∫–∞
"""

import asyncio
import sys
import os
from unittest.mock import MagicMock

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from handlers.ai_assistant_handler import show_ai_assistant_menu

async def demo_ai_assistant():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è AI-–ø–æ–º—ñ—á–Ω–∏–∫–∞"""
    
    print("ü§ñ === –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø AI-–ü–û–ú–Ü–ß–ù–ò–ö–ê ===\n")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ mock –æ–±'—î–∫—Ç–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
    class MockQuery:
        def __init__(self):
            self.from_user = MagicMock()
            self.from_user.id = 123456
            
        async def edit_message_text(self, text, reply_markup=None, parse_mode=None):
            print("üì± –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –í –¢–ï–õ–ï–ì–†–ê–ú:")
            print("=" * 50)
            print(text)
            print("=" * 50)
            
            if reply_markup:
                print("\nüîò –ö–ù–û–ü–ö–ò:")
                for i, row in enumerate(reply_markup.inline_keyboard):
                    for j, button in enumerate(row):
                        print(f"  [{button.text}] ‚Üí {button.callback_data}")
                print()
    
    mock_query = MockQuery()
    mock_context = MagicMock()
    
    print("1Ô∏è‚É£ –ü–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é AI-–ø–æ–º—ñ—á–Ω–∏–∫–∞:")
    print("-" * 50)
    
    try:
        await show_ai_assistant_menu(mock_query, mock_context)
    except Exception as e:
        print(f"–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. (–û—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e})")
    
    print("\n‚ú® –û–°–û–ë–õ–ò–í–û–°–¢–Ü AI-–ü–û–ú–Ü–ß–ù–ò–ö–ê:")
    print("üìä –ê–Ω–∞–ª—ñ–∑—É—î –≤–∞—à—ñ —Ä–µ–∞–ª—å–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó")
    print("üá∫üá¶ –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é") 
    print("üéØ –î–∞—î –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –ø–æ—Ä–∞–¥–∏")
    print("üîÆ –°—Ç–≤–æ—Ä—é—î –ø—Ä–æ–≥–Ω–æ–∑–∏ –≤–∏—Ç—Ä–∞—Ç")
    print("‚ùì –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è")
    print("üõ°Ô∏è –ú–∞—î fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏")
    
    print("\nüöÄ –î–õ–Ø –ü–û–í–ù–û–¶–Ü–ù–ù–û–á –†–û–ë–û–¢–ò:")
    print("1. –î–æ–¥–∞–π—Ç–µ OPENAI_API_KEY –≤ .env —Ñ–∞–π–ª")
    print("2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –±–æ—Ç–∞: python bot.py")
    print("3. –í –¢–µ–ª–µ–≥—Ä–∞–º—ñ: /start ‚Üí ü§ñ AI-–ø–æ–º—ñ—á–Ω–∏–∫")

if __name__ == "__main__":
    asyncio.run(demo_ai_assistant())
