#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.models import Session, User, Category, TransactionType
from database.db_operations import get_or_create_user

def create_test_categories():
    """–°—Ç–≤–æ—Ä—é—î —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó"""
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    test_telegram_id = 123456789  # –¢–µ—Å—Ç–æ–≤–∏–π ID
    user = get_or_create_user(test_telegram_id)
    
    session = Session()
    
    # –í–∏–¥–∞–ª—è—î–º–æ —ñ—Å–Ω—É—é—á—ñ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (–Ω–µ —Å–∏—Å—Ç–µ–º–Ω—ñ)
    existing_categories = session.query(Category).filter(
        Category.user_id == user.id,
        Category.is_default == False
    ).all()
    
    for cat in existing_categories:
        session.delete(cat)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∏—Ç—Ä–∞—Ç
    expense_categories = [
        "–ü—Ä–æ–¥—É–∫—Ç–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è",
        "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —ñ –ø–∞–ª–∏–≤–æ", 
        "–†–æ–∑–≤–∞–≥–∏ —Ç–∞ –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫",
        "–û–¥—è–≥ —Ç–∞ –≤–∑—É—Ç—Ç—è",
        "–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏",
        "–ú–µ–¥–∏—Ü–∏–Ω–∞ —Ç–∞ –∑–¥–æ—Ä–æ–≤'—è",
        "–û—Å–≤—ñ—Ç–∞ —Ç–∞ –∫–Ω–∏–≥–∏",
        "–ü–æ–¥–∞—Ä—É–Ω–∫–∏ —Ç–∞ –±–ª–∞–≥–æ–¥—ñ–π–Ω—ñ—Å—Ç—å",
        "–î–æ–º–∞—à–Ω—ñ —Ç–æ–≤–∞—Ä–∏",
        "–ö–∞—Ñ–µ —Ç–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∏",
        "–°–ø–æ—Ä—Ç —Ç–∞ —Ñ—ñ—Ç–Ω–µ—Å",
        "–ö—Ä–∞—Å–∞ —Ç–∞ –¥–æ–≥–ª—è–¥",
        "–•–æ–±—ñ —Ç–∞ –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è",
        "–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —Ç–∞ –≥–∞–¥–∂–µ—Ç–∏",
        "–ü–æ–¥–æ—Ä–æ–∂—ñ —Ç–∞ —Ç—É—Ä–∏–∑–º"
    ]
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–æ—Ö–æ–¥—ñ–≤
    income_categories = [
        "–û—Å–Ω–æ–≤–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞",
        "–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ—Ö–æ–¥–∏",
        "–§—Ä—ñ–ª–∞–Ω—Å –ø—Ä–æ–µ–∫—Ç–∏",
        "–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π–Ω—ñ –¥–æ—Ö–æ–¥–∏",
        "–î–∏–≤—ñ–¥–µ–Ω–¥–∏",
        "–û—Ä–µ–Ω–¥–∞ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ",
        "–ü—Ä–æ–¥–∞–∂ —Ç–æ–≤–∞—Ä—ñ–≤",
        "–ü—Ä–µ–º—ñ—ó —Ç–∞ –±–æ–Ω—É—Å–∏",
        "–ü–æ–¥–∞—Ä—É–Ω–∫–∏ –≥—Ä–æ—à–æ–≤—ñ",
        "–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –±–æ—Ä–≥—ñ–≤",
        "Cashback —Ç–∞ –∑–Ω–∏–∂–∫–∏",
        "–í–∏–≥—Ä–∞—à—ñ —Ç–∞ –ø—Ä–∏–∑–∏"
    ]
    
    # –î–æ–¥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∏—Ç—Ä–∞—Ç
    for i, name in enumerate(expense_categories):
        category = Category(
            user_id=user.id,
            name=name,
            type=TransactionType.EXPENSE.value,  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ .value –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
            icon="üí∏",
            is_default=False
        )
        session.add(category)
    
    # –î–æ–¥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–æ—Ö–æ–¥—ñ–≤  
    for i, name in enumerate(income_categories):
        category = Category(
            user_id=user.id,
            name=name,
            type=TransactionType.INCOME.value,  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ .value –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
            icon="üí∞",
            is_default=False
        )
        session.add(category)
    
    session.commit()
    session.close()
    
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {len(expense_categories)} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≤–∏—Ç—Ä–∞—Ç")
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {len(income_categories)} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–æ—Ö–æ–¥—ñ–≤")
    print(f"üì± –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á: {test_telegram_id}")
    print("\nüîç –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é –≤ –±–æ—Ç—ñ!")
    print("   1. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –±–æ—Ç–∞")
    print("   2. –£–≤—ñ–π–¥—ñ—Ç—å —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID 123456789")
    print("   3. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚Üí –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó")
    print("   4. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–æ–±–æ—Ç—É –∫–Ω–æ–ø–æ–∫ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤")

if __name__ == "__main__":
    create_test_categories()
