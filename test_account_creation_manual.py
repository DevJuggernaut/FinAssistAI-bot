#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ —Ä—É—á–Ω–∏–º –≤–≤–æ–¥–æ–º –±–∞–ª–∞–Ω—Å—É
"""
import asyncio
import sys
import os

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç—É –¥–æ sys.path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from database.db_operations import (
    get_or_create_user, create_account, get_user_accounts, 
    get_total_balance, get_accounts_count
)
from database.models import AccountType

def test_manual_account_creation():
    """–¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ —Ä—É—á–Ω–∏–º –≤–≤–æ–¥–æ–º –±–∞–ª–∞–Ω—Å—É"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ —Ä—É—á–Ω–∏–º –≤–≤–æ–¥–æ–º")
    print("=" * 60)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    test_user_id = 999998  # –Ü–Ω—à–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π ID
    user = get_or_create_user(test_user_id)
    print(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: {user.id}")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
    initial_count = get_accounts_count(user.id)
    initial_balance = get_total_balance(user.id)
    print(f"üìä –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω:")
    print(f"   üè¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞—Ö—É–Ω–∫—ñ–≤: {initial_count}")
    print(f"   üí∞ –ó–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å: {initial_balance:,.2f} UAH")
    
    # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –±–∞–ª–∞–Ω—Å–∞–º–∏
    test_cases = [
        ("–¢–µ—Å—Ç–æ–≤–∏–π –ö–∞—Ä—Ç–∫–æ–≤–∏–π", AccountType.BANK_CARD, 2500.75, "üí≥"),
        ("–¢–µ—Å—Ç–æ–≤–∞ –ì–æ—Ç—ñ–≤–∫–∞", AccountType.CASH, 0.0, "üíµ"),
        ("–¢–µ—Å—Ç–æ–≤—ñ –ó–∞–æ—â–∞–¥–∂–µ–Ω–Ω—è", AccountType.SAVINGS, 50000.0, "üè¶"),
    ]
    
    created_accounts = []
    
    for name, account_type, balance, icon in test_cases:
        print(f"\nüîß –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É: {name}")
        print(f"   üí∞ –ë–∞–ª–∞–Ω—Å: {balance:,.2f} UAH")
        
        try:
            new_account = create_account(
                user_id=user.id,
                name=name,
                account_type=account_type,
                balance=balance,
                icon=icon
            )
            
            if new_account:
                print(f"‚úÖ –†–∞—Ö—É–Ω–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–æ: ID={new_account.id}")
                created_accounts.append(new_account)
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É")
                
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüìä –§—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω:")
    final_accounts = get_user_accounts(user.id)
    final_count = len(final_accounts)
    final_balance = get_total_balance(user.id)
    
    print(f"   üè¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞—Ö—É–Ω–∫—ñ–≤: {final_count}")
    print(f"   üí∞ –ó–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å: {final_balance:,.2f} UAH")
    
    print(f"\nüìã –°—Ç–≤–æ—Ä–µ–Ω—ñ —Ä–∞—Ö—É–Ω–∫–∏:")
    for acc in final_accounts:
        if acc.id > initial_count:  # –ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –Ω–æ–≤—ñ —Ä–∞—Ö—É–Ω–∫–∏
            print(f"   {acc.icon} {acc.name}: {acc.balance:,.2f} UAH")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤
    expected_total = initial_balance + sum(case[2] for case in test_cases)
    if abs(final_balance - expected_total) < 0.01:
        print(f"\n‚úÖ –ó–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π!")
    else:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ —É –∑–∞–≥–∞–ª—å–Ω–æ–º—É –±–∞–ª–∞–Ω—Å—ñ!")
        print(f"   –û—á—ñ–∫—É–≤–∞–Ω–æ: {expected_total:,.2f}")
        print(f"   –§–∞–∫—Ç–∏—á–Ω–æ: {final_balance:,.2f}")
    
    return user, created_accounts

def test_balance_validation():
    """–¢–µ—Å—Ç—É—î–º–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –±–∞–ª–∞–Ω—Å—É"""
    print(f"\nüõ°Ô∏è –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –±–∞–ª–∞–Ω—Å—É")
    print("-" * 40)
    
    test_user_id = 999997
    user = get_or_create_user(test_user_id)
    
    # –¢–µ—Å—Ç 1: –í—ñ–¥'—î–º–Ω–∏–π –±–∞–ª–∞–Ω—Å
    print(f"\n‚ùå –¢–µ—Å—Ç: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ –≤—ñ–¥'—î–º–Ω–∏–º –±–∞–ª–∞–Ω—Å–æ–º")
    try:
        negative_account = create_account(
            user_id=user.id,
            name="–¢–µ—Å—Ç –≤—ñ–¥'—î–º–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É",
            account_type=AccountType.CASH,
            balance=-1000.0,
            icon="üíµ"
        )
        
        if negative_account and negative_account.balance >= 0:
            print("‚úÖ –í—ñ–¥'—î–º–Ω–∏–π –±–∞–ª–∞–Ω—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–±–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ")
        elif not negative_account:
            print("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ –≤—ñ–¥'—î–º–Ω–∏–º –±–∞–ª–∞–Ω—Å–æ–º –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ")
        else:
            print("‚ùå –í—ñ–¥'—î–º–Ω–∏–π –±–∞–ª–∞–Ω—Å –¥–æ–∑–≤–æ–ª–µ–Ω–æ!")
            
    except Exception as e:
        print(f"‚úÖ –í–∏–Ω—è—Ç–æ–∫ –ø—Ä–∏ –≤—ñ–¥'—î–º–Ω–æ–º—É –±–∞–ª–∞–Ω—Å—ñ: {str(e)}")
    
    # –¢–µ—Å—Ç 2: –ù—É–ª—å–æ–≤–∏–π –±–∞–ª–∞–Ω—Å (–¥–æ–∑–≤–æ–ª–µ–Ω–æ)
    print(f"\n‚úÖ –¢–µ—Å—Ç: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ –Ω—É–ª—å–æ–≤–∏–º –±–∞–ª–∞–Ω—Å–æ–º")
    try:
        zero_account = create_account(
            user_id=user.id,
            name="–¢–µ—Å—Ç –Ω—É–ª—å–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å—É",
            account_type=AccountType.CASH,
            balance=0.0,
            icon="üíµ"
        )
        
        if zero_account and zero_account.balance == 0.0:
            print("‚úÖ –ù—É–ª—å–æ–≤–∏–π –±–∞–ª–∞–Ω—Å –¥–æ–∑–≤–æ–ª–µ–Ω–æ")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –∑ –Ω—É–ª—å–æ–≤–∏–º –±–∞–ª–∞–Ω—Å–æ–º")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ –Ω—É–ª—å–æ–≤–∏–º –±–∞–ª–∞–Ω—Å–æ–º: {str(e)}")
    
    # –¢–µ—Å—Ç 3: –í–µ–ª–∏–∫–∏–π –±–∞–ª–∞–Ω—Å
    print(f"\n‚úÖ –¢–µ—Å—Ç: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –∑ –≤–µ–ª–∏–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º")
    try:
        large_account = create_account(
            user_id=user.id,
            name="–¢–µ—Å—Ç –≤–µ–ª–∏–∫–æ–≥–æ –±–∞–ª–∞–Ω—Å—É",
            account_type=AccountType.SAVINGS,
            balance=1000000.0,
            icon="üè¶"
        )
        
        if large_account and large_account.balance == 1000000.0:
            print("‚úÖ –í–µ–ª–∏–∫–∏–π –±–∞–ª–∞–Ω—Å –¥–æ–∑–≤–æ–ª–µ–Ω–æ")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –∑ –≤–µ–ª–∏–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ –≤–µ–ª–∏–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º: {str(e)}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—ñ–≤ –∑ —Ä—É—á–Ω–∏–º –≤–≤–æ–¥–æ–º –±–∞–ª–∞–Ω—Å—É")
    print("=" * 70)
    
    try:
        # –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
        test_manual_account_creation()
        
        # –¢–µ—Å—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
        test_balance_validation()
        
        print(f"\n‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"\nüí° –í–∞–∂–ª–∏–≤–æ: –£ –Ω–æ–≤—ñ–π –≤–µ—Ä—Å—ñ—ó –±–æ—Ç—É —à–≤–∏–¥–∫—ñ –∫–Ω–æ–ø–∫–∏ –∑ –±–∞–ª–∞–Ω—Å–∞–º–∏ –≤–∏–¥–∞–ª–µ–Ω–æ,")
        print(f"   —Ç–µ–ø–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –º–æ–∂—É—Ç—å –≤–≤–æ–¥–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –±–∞–ª–∞–Ω—Å –≤—Ä—É—á–Ω—É.")
        print(f"\nüìã –ù–æ–≤—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:")
        print(f"   ‚Ä¢ –†—É—á–Ω–∏–π –≤–≤—ñ–¥ –±—É–¥—å-—è–∫–æ—ó —Å—É–º–∏ (–≤–∫–ª—é—á–Ω–æ –∑ 0)")
        print(f"   ‚Ä¢ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤—ñ–¥'—î–º–Ω–∏—Ö —Å—É–º")
        print(f"   ‚Ä¢ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –¥–µ—Å—è—Ç–∫–æ–≤–∏—Ö —á–∏—Å–µ–ª")
        print(f"   ‚Ä¢ –ö—Ä–∞—â–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
