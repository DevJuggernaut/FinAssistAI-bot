#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–≥–æ, —â–æ —Ç–∞–±–ª–∏—Ü—ñ –≤ PDF –Ω–µ —Ä–æ–∑—Ä–∏–≤–∞—é—Ç—å—Å—è –Ω–∞ –¥–≤—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
"""

import sys
import os
import django
from datetime import datetime, timedelta
from decimal import Decimal

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Django
sys.path.append('/Users/abobina/telegram_bot/FinAssistAI-bot')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from bot_app.models import User, Account, Transaction, Category
from handlers.analytics_handler import create_pdf_report, get_user_statistics

def create_test_data():
    """–°—Ç–≤–æ—Ä—é—î —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ PDF"""
    print("üìä –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ...")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user, created = User.objects.get_or_create(
        telegram_id=999999999,
        defaults={
            'username': 'test_pdf_user',
            'first_name': 'PDF',
            'last_name': 'Tester'
        }
    )
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–∞—Ö—É–Ω–æ–∫
    account, created = Account.objects.get_or_create(
        user=user,
        name='–¢–µ—Å—Ç–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫',
        defaults={'balance': Decimal('10000.00')}
    )
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ –¥–æ–≤–≥–∏–º–∏ –Ω–∞–∑–≤–∞–º–∏ (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–Ω–æ—Å—É —Ç–µ–∫—Å—Ç—É)
    categories_data = [
        '–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–∏ —Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è',
        '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —ñ –ø–∞–ª–∏–≤–æ –¥–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è',
        '–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ —Ç–∞ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç',
        '–†–æ–∑–≤–∞–≥–∏ –∫—ñ–Ω–æ —Ç–µ–∞—Ç—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∏',
        '–ú–µ–¥–∏—Ü–∏–Ω–∞ –ª—ñ–∫–∏ –∞–ø—Ç–µ–∫–∞ –ª—ñ–∫–∞—Ä—ñ',
        '–û–¥—è–≥ –≤–∑—É—Ç—Ç—è –∞–∫—Å–µ—Å—É–∞—Ä–∏ –∫—Ä–∞—Å–∞',
        '–û—Å–≤—ñ—Ç–∞ –∫–Ω–∏–≥–∏ –∫—É—Ä—Å–∏ –Ω–∞–≤—á–∞–Ω–Ω—è',
        '–ü–æ–¥–∞—Ä—É–Ω–∫–∏ –±–ª–∞–≥–æ–¥—ñ–π–Ω—ñ—Å—Ç—å –¥–æ–ø–æ–º–æ–≥–∞'
    ]
    
    categories = []
    for cat_name in categories_data:
        category, created = Category.objects.get_or_create(
            user=user,
            name=cat_name,
            defaults={'type': 'expense'}
        )
        categories.append(category)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ—Ö–æ–¥–∏
    income_category, created = Category.objects.get_or_create(
        user=user,
        name='–ó–∞—Ä–ø–ª–∞—Ç–∞',
        defaults={'type': 'income'}
    )
    
    # –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
    Transaction.objects.filter(account__user=user).delete()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ—Ö–æ–¥–∏
    for i in range(3):
        Transaction.objects.create(
            account=account,
            amount=Decimal('25000.00'),
            description=f'–ó–∞—Ä–ø–ª–∞—Ç–∞ {i+1}',
            category=income_category,
            transaction_type='income',
            date=datetime.now() - timedelta(days=i*10)
        )
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–≥–∞—Ç–æ –≤–∏—Ç—Ä–∞—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö (—â–æ–± —Ç–∞–±–ª–∏—Ü—è –±—É–ª–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–∞)
    import random
    for i, category in enumerate(categories):
        # –†—ñ–∑–Ω—ñ —Å—É–º–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
        base_amount = 5000 - (i * 500)  # –í—ñ–¥ 5000 –¥–æ 1500
        
        for j in range(random.randint(5, 12)):  # –í—ñ–¥ 5 –¥–æ 12 —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
            amount = base_amount + random.randint(-500, 500)
            Transaction.objects.create(
                account=account,
                amount=Decimal(str(amount)),
                description=f'{category.name} - –ø–æ–∫—É–ø–∫–∞ {j+1}',
                category=category,
                transaction_type='expense',
                date=datetime.now() - timedelta(days=random.randint(1, 30))
            )
    
    return user

def test_pdf_generation():
    """–¢–µ—Å—Ç—É—î –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é PDF –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏"""
    print("üîß –ì–µ–Ω–µ—Ä—É—î–º–æ PDF –∑–≤—ñ—Ç...")
    
    user = create_test_data()
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_user_statistics(user.telegram_id, period='30 –¥–Ω—ñ–≤')
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
    from bot_app.models import Transaction
    transactions = Transaction.objects.filter(
        account__user=user,
        date__gte=datetime.now() - timedelta(days=30)
    ).select_related('category', 'account').order_by('-date')
    
    print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   ‚Ä¢ –î–æ—Ö–æ–¥–∏: {stats['total_income']:,.2f} –≥—Ä–Ω")
    print(f"   ‚Ä¢ –í–∏—Ç—Ä–∞—Ç–∏: {stats['total_expenses']:,.2f} –≥—Ä–Ω")
    print(f"   ‚Ä¢ –ë–∞–ª–∞–Ω—Å: {stats['balance']:+,.2f} –≥—Ä–Ω")
    print(f"   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –≤–∏—Ç—Ä–∞—Ç: {len(stats['category_expenses'])}")
    print(f"   ‚Ä¢ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: {transactions.count()}")
    
    try:
        # –ì–µ–Ω–µ—Ä—É—î–º–æ PDF
        pdf_buffer = create_pdf_report(user, transactions, stats)
        
        if pdf_buffer:
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ PDF —Ñ–∞–π–ª
            pdf_filename = f"test_pdf_no_breaks_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
            with open(pdf_filename, 'wb') as f:
                f.write(pdf_buffer.read())
            
            print(f"‚úÖ PDF —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ: {pdf_filename}")
            print(f"üìù –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: {os.path.getsize(pdf_filename)} –±–∞–π—Ç")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —Ñ–∞–π–ª –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π —ñ –º–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ PDF
            with open(pdf_filename, 'rb') as f:
                content = f.read()
                if content.startswith(b'%PDF'):
                    print("‚úÖ PDF —Ñ–∞–π–ª –º–∞—î –∫–æ—Ä–µ–∫—Ç–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
                else:
                    print("‚ùå PDF —Ñ–∞–π–ª –º–∞—î –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
            
            print(f"\nüîç –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:")
            print(f"   ‚Ä¢ –§–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å –¥–∞–Ω—ñ –ø—Ä–æ {len(stats['category_expenses'])} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
            print(f"   ‚Ä¢ –í—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –Ω–∞ –æ–¥–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∑–∞–≤–¥—è–∫–∏ KeepTogether")
            print(f"   ‚Ä¢ –¢–µ–∫—Å—Ç –±–µ–∑ –µ–º–æ–¥–∑—ñ, –ª–∏—à–µ —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç")
            print(f"   ‚Ä¢ –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ —à–∏—Ä–∏–Ω–∏ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è")
            
            return True
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞: PDF –Ω–µ –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ PDF: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

def cleanup_test_data():
    """–û—á–∏—â–∞—î —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ"""
    print("üßπ –û—á–∏—â–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ...")
    try:
        user = User.objects.get(telegram_id=999999999)
        # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –ø–æ–≤'—è–∑–∞–Ω—ñ –æ–±'—î–∫—Ç–∏
        Transaction.objects.filter(account__user=user).delete()
        Category.objects.filter(user=user).delete()
        Account.objects.filter(user=user).delete()
        user.delete()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –æ—á–∏—â–µ–Ω–æ")
    except User.DoesNotExist:
        print("‚ÑπÔ∏è –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É PDF –±–µ–∑ —Ä–æ–∑—Ä–∏–≤—ñ–≤ —Ç–∞–±–ª–∏—Ü—å...")
    print("=" * 60)
    
    try:
        success = test_pdf_generation()
        
        if success:
            print("\n" + "=" * 60)
            print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–®–û–í –£–°–ü–Ü–®–ù–û!")
            print("üìã –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π PDF —Ñ–∞–π–ª:")
            print("   ‚Ä¢ –¢–∞–±–ª–∏—Ü—ñ –Ω–µ —Ä–æ–∑—Ä–∏–≤–∞—é—Ç—å—Å—è –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏")
            print("   ‚Ä¢ –¢–µ–∫—Å—Ç —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π –±–µ–∑ –µ–º–æ–¥–∑—ñ")
            print("   ‚Ä¢ –ö–æ–ª–æ–Ω–∫–∏ –º–∞—é—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É —à–∏—Ä–∏–Ω—É")
            print("   ‚Ä¢ –†–æ–∑–¥—ñ–ª–∏ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è —Ü—ñ–ª–∏–º–∏")
        else:
            print("\n" + "=" * 60)
            print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–®–û–í!")
    
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ —Ç–µ—Å—Ç—ñ: {str(e)}")
        import traceback
        traceback.print_exc()
    
    finally:
        cleanup_test_data()
        print("\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
