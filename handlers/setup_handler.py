from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from database.session import Session
from database.models import User, Transaction, TransactionType
from datetime import datetime

# –°—Ç–∞–Ω–∏ —Ä–æ–∑–º–æ–≤–∏
SETUP_START, SETUP_BALANCE, SETUP_BUDGET, SETUP_NOTIFICATIONS = range(4)

async def start_setup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ –ø—Ä–æ—Ü–µ—Å—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ –≤—ñ—Ç–∞–Ω–Ω—è–º –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    user_id = update.effective_user.id
    
    with Session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        if not user:
            user = User(
                telegram_id=user_id,
                username=update.effective_user.username,
                first_name=update.effective_user.first_name,
                last_name=update.effective_user.last_name
            )
            session.add(user)
            session.commit()
            
            # –î–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —è–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ
            user.setup_step = 'start'
            user.is_setup_completed = False
            session.commit()
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    first_name = update.effective_user.first_name or "–¥—Ä—É–∂–µ"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–ª–∞—à—Ç—É–≤–∞–≤ –±–æ—Ç–∞
    with Session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        is_setup_complete = user and user.is_setup_completed
    
    # –Ø–∫—â–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑ —î–¥–∏–Ω–æ—é –∫–Ω–æ–ø–∫–æ—é
    if not is_setup_complete:
        keyboard = [
            [
                InlineKeyboardButton("üöÄ –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –±–æ—Ç–∞", callback_data="setup_initial_balance")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        message_text = (
            f"üëã *–í—ñ—Ç–∞—î–º–æ, {first_name}, —É FinAssist!*\n\n"
            "*–í–∞—à –æ—Å–æ–±–∏—Å—Ç–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤*\n\n"
            "*–û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞:*\n"
            "‚Ä¢ –û–±–ª—ñ–∫ –¥–æ—Ö–æ–¥—ñ–≤ —Ç–∞ –≤–∏—Ç—Ä–∞—Ç\n"
            "‚Ä¢ –ê–Ω–∞–ª—ñ–∑ —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤ —Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—é–¥–∂–µ—Ç–æ–º\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤—ñ –ø–æ—Ä–∞–¥–∏\n\n"
            "*‚ö†Ô∏è –î–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –±–æ—Ç–∞*\n"
            "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –ø—Ä–æ—Ü–µ—Å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.\n"
            "–í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ:\n"
            "1Ô∏è‚É£ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å\n"
            "2Ô∏è‚É£ –í–∫–∞–∑–∞—Ç–∏ –º—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç\n\n"
        )
        
        await update.message.reply_text(
            message_text,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
    else:
        # –î–ª—è –≤–∂–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —ñ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ —î–¥–∏–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
        from handlers.main_menu import show_main_menu
        
        # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è –≤–∂–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        welcome_message = (
            f"üëã *–ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º, {first_name}!*\n\n"
            "*–í–∞—à –æ—Å–æ–±–∏—Å—Ç–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤*\n\n"
            "*–û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞:*\n"
            "‚Ä¢ –û–±–ª—ñ–∫ –¥–æ—Ö–æ–¥—ñ–≤ —Ç–∞ –≤–∏—Ç—Ä–∞—Ç\n"
            "‚Ä¢ –ê–Ω–∞–ª—ñ–∑ —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤ —Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—é–¥–∂–µ—Ç–æ–º\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤—ñ –ø–æ—Ä–∞–¥–∏\n\n"
            "üìå *‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è* ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –ø—ñ–¥ –≤–∞—à—ñ –ø–æ—Ç—Ä–µ–±–∏\n\n"
            "*–ü–æ—Ä–∞–¥–∞:* –ü–æ—á–Ω—ñ—Ç—å –∑ —Ä–æ–∑–¥—ñ–ª—É '–ú—ñ–π –±—é–¥–∂–µ—Ç', –∞ –ø–æ—Ç—ñ–º –¥–æ–¥–∞–π—Ç–µ –ø–µ—Ä—à—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó!"
        )
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
        await update.message.reply_text(
            welcome_message,
            parse_mode='Markdown'
        )
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ —î–¥–∏–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
        await show_main_menu(update.message, context, is_query=False)
    return ConversationHandler.END

async def setup_balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å—É"""
    try:
        balance = float(update.message.text.replace(',', '.'))
        user_id = update.effective_user.id
        
        with Session() as session:
            user = session.query(User).filter(User.telegram_id == user_id).first()
            user.initial_balance = balance
            user.setup_step = 'balance'
            currency = user.currency
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
            transaction = Transaction(
                user_id=user.id,
                amount=balance,
                type=TransactionType.INCOME,
                description="–ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å",
                transaction_date=datetime.utcnow()
            )
            session.add(transaction)
            session.commit()
        
        await update.message.reply_text(
            f"–ß—É–¥–æ–≤–æ! –í–∞—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {balance} {currency}\n\n"
            "–¢–µ–ø–µ—Ä –≤–∫–∞–∂—ñ—Ç—å –≤–∞—à –º—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 5000):"
        )
        return SETUP_BUDGET
        
    except ValueError:
        await update.message.reply_text(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 1000):"
        )
        return SETUP_BALANCE

async def setup_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –º—ñ—Å—è—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç—É"""
    try:
        budget = float(update.message.text.replace(',', '.'))
        user_id = update.effective_user.id
        
        with Session() as session:
            user = session.query(User).filter(User.telegram_id == user_id).first()
            user.monthly_budget = budget
            user.setup_step = 'budget'
            currency = user.currency
            session.commit()
        
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –£–≤—ñ–º–∫–Ω—É—Ç–∏", callback_data="notifications_on"),
                InlineKeyboardButton("‚ùå –í–∏–º–∫–Ω—É—Ç–∏", callback_data="notifications_off")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"–ß—É–¥–æ–≤–æ! –í–∞—à –º—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {budget} {currency}\n\n"
            "–ë–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –¥–æ—Ö–æ–¥–∏?",
            reply_markup=reply_markup
        )
        return SETUP_NOTIFICATIONS
        
    except ValueError:
        await update.message.reply_text(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 5000):"
        )
        return SETUP_BUDGET

async def setup_notifications(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å"""
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    notifications_enabled = query.data == "notifications_on"
    
    with Session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        user.notification_enabled = notifications_enabled
        user.setup_step = 'completed'
        user.is_setup_completed = True
        session.commit()
    
    await query.edit_message_text(
        f"–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! üéâ\n\n"
        f"–í–∞—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: {user.initial_balance} {user.currency}\n"
        f"–ú—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç: {user.monthly_budget} {user.currency}\n"
        f"–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: {'—É–≤—ñ–º–∫–Ω–µ–Ω–æ' if notifications_enabled else '–≤–∏–º–∫–Ω–µ–Ω–æ'}\n\n"
        "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞:\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/settings - –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è\n"
        "/balance - –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å\n"
        "/add - –¥–æ–¥–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é"
    )
    return ConversationHandler.END

async def cancel_setup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–∫–∞—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"""
    await update.message.reply_text(
        "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é /start"
    )
    return ConversationHandler.END 