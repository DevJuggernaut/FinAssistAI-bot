from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from database.session import Session
from database.models import User, Transaction, TransactionType
from datetime import datetime

# –°—Ç–∞–Ω–∏ —Ä–æ–∑–º–æ–≤–∏
SETUP_START, SETUP_BALANCE, SETUP_BUDGET, SETUP_NOTIFICATIONS = range(4)

async def start_setup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ –ø—Ä–æ—Ü–µ—Å—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"""
    user_id = update.effective_user.id
    
    with Session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        if not user:
            user = User(
                telegram_id=user_id,
                username=update.effective_user.username,
                first_name=update.effective_user.first_name,
                last_name=update.effective_user.last_name
            )
            session.add(user)
            session.commit()
        
        if user.is_setup_completed:
            await update.message.reply_text(
                "–í–∏ –≤–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /settings –¥–ª—è –∑–º—ñ–Ω–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å."
            )
            return ConversationHandler.END
        
        user.setup_step = 'start'
        session.commit()
        
        await update.message.reply_text(
            "–í—ñ—Ç–∞—é! –î–∞–≤–∞–π—Ç–µ –Ω–∞–ª–∞—à—Ç—É—î–º–æ –≤–∞—à —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç.\n\n"
            "–°–ø–æ—á–∞—Ç–∫—É –≤–∫–∞–∂—ñ—Ç—å –≤–∞—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 1000):"
        )
        return SETUP_BALANCE

async def setup_balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å—É"""
    try:
        balance = float(update.message.text.replace(',', '.'))
        user_id = update.effective_user.id
        
        with Session() as session:
            user = session.query(User).filter(User.telegram_id == user_id).first()
            user.initial_balance = balance
            user.setup_step = 'balance'
            currency = user.currency
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
            transaction = Transaction(
                user_id=user.id,
                amount=balance,
                type=TransactionType.INCOME,
                description="–ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å",
                transaction_date=datetime.utcnow()
            )
            session.add(transaction)
            session.commit()
        
        await update.message.reply_text(
            f"–ß—É–¥–æ–≤–æ! –í–∞—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {balance} {currency}\n\n"
            "–¢–µ–ø–µ—Ä –≤–∫–∞–∂—ñ—Ç—å –≤–∞—à –º—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 5000):"
        )
        return SETUP_BUDGET
        
    except ValueError:
        await update.message.reply_text(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 1000):"
        )
        return SETUP_BALANCE

async def setup_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –º—ñ—Å—è—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç—É"""
    try:
        budget = float(update.message.text.replace(',', '.'))
        user_id = update.effective_user.id
        
        with Session() as session:
            user = session.query(User).filter(User.telegram_id == user_id).first()
            user.monthly_budget = budget
            user.setup_step = 'budget'
            currency = user.currency
            session.commit()
        
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –£–≤—ñ–º–∫–Ω—É—Ç–∏", callback_data="notifications_on"),
                InlineKeyboardButton("‚ùå –í–∏–º–∫–Ω—É—Ç–∏", callback_data="notifications_off")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"–ß—É–¥–æ–≤–æ! –í–∞—à –º—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {budget} {currency}\n\n"
            "–ë–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –¥–æ—Ö–æ–¥–∏?",
            reply_markup=reply_markup
        )
        return SETUP_NOTIFICATIONS
        
    except ValueError:
        await update.message.reply_text(
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 5000):"
        )
        return SETUP_BUDGET

async def setup_notifications(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å"""
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    notifications_enabled = query.data == "notifications_on"
    
    with Session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        user.notification_enabled = notifications_enabled
        user.setup_step = 'completed'
        user.is_setup_completed = True
        session.commit()
    
    await query.edit_message_text(
        f"–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! üéâ\n\n"
        f"–í–∞—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: {user.initial_balance} {user.currency}\n"
        f"–ú—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç: {user.monthly_budget} {user.currency}\n"
        f"–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: {'—É–≤—ñ–º–∫–Ω–µ–Ω–æ' if notifications_enabled else '–≤–∏–º–∫–Ω–µ–Ω–æ'}\n\n"
        "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–æ—Ç–∞:\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/settings - –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è\n"
        "/balance - –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å\n"
        "/add - –¥–æ–¥–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é"
    )
    return ConversationHandler.END

async def cancel_setup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–∫–∞—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"""
    await update.message.reply_text(
        "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ. –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é /start"
    )
    return ConversationHandler.END 