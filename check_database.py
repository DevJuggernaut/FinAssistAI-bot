#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞–Ω—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def check_database_status():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Å—Ç–∞–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö\n")
    
    try:
        from database.db_operations import engine
        from database.models import User, Category, Transaction
        from sqlalchemy import text
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏
        with engine.connect() as conn:
            result = conn.execute(text("SELECT 1"))
            print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –ø—Ä–∞—Ü—é—î")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        from sqlalchemy.orm import sessionmaker
        Session = sessionmaker(bind=engine)
        session = Session()
        
        try:
            users_count = session.query(User).count()
            categories_count = session.query(Category).count()
            transactions_count = session.query(Transaction).count()
            
            print(f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –±–∞–∑—ñ: {users_count}")
            print(f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä—ñ–π —É –±–∞–∑—ñ: {categories_count}")
            print(f"üí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π —É –±–∞–∑—ñ: {transactions_count}")
            
            if users_count > 0:
                print(f"\nüìã –ü–µ—Ä—à—ñ 5 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:")
                users = session.query(User).limit(5).all()
                for user in users:
                    print(f"  ‚Ä¢ ID: {user.id}, –Ü–º'—è: {user.first_name or '–ë–µ–∑ —ñ–º–µ–Ω—ñ'}, Username: @{user.username or '–Ω–µ–º–∞—î'}")
            
            if categories_count > 0:
                print(f"\nüìÇ –ü–µ—Ä—à—ñ 10 –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:")
                categories = session.query(Category).limit(10).all()
                for cat in categories:
                    print(f"  ‚Ä¢ ID: {cat.id}, –ù–∞–∑–≤–∞: {cat.name}, –¢–∏–ø: {cat.type.value}, –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {cat.user_id}")
            
        finally:
            session.close()
        
        print(f"\n‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_database_status()
