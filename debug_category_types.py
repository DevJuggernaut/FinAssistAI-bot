#!/usr/bin/env python3
"""
–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def check_category_types():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ç–∏–ø–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö"""
    
    print("üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π\n")
    
    try:
        from database.models import Session, Category, TransactionType
        
        session = Session()
        
        try:
            # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
            all_categories = session.query(Category).all()
            
            print(f"üìä –í—Å—å–æ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≤ –±–∞–∑—ñ: {len(all_categories)}")
            
            if not all_categories:
                print("‚ùå –ù–µ–º–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
                return
            
            # –ì—Ä—É–ø—É—î–º–æ –∑–∞ —Ç–∏–ø–∞–º–∏
            type_counts = {}
            categories_by_type = {}
            
            for cat in all_categories:
                cat_type = cat.type
                type_str = str(cat_type)
                
                if type_str not in type_counts:
                    type_counts[type_str] = 0
                    categories_by_type[type_str] = []
                
                type_counts[type_str] += 1
                categories_by_type[type_str].append(cat)
            
            print("\nüìã –†–æ–∑–ø–æ–¥—ñ–ª –∑–∞ —Ç–∏–ø–∞–º–∏:")
            for type_str, count in type_counts.items():
                print(f"  ‚Ä¢ {type_str}: {count}")
            
            print(f"\nüîç –û—á—ñ–∫—É–≤–∞–Ω—ñ —Ç–∏–ø–∏:")
            print(f"  ‚Ä¢ {TransactionType.EXPENSE}: –≤–∏—Ç—Ä–∞—Ç–∏")
            print(f"  ‚Ä¢ {TransactionType.INCOME}: –¥–æ—Ö–æ–¥–∏")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
            for type_str, categories in categories_by_type.items():
                print(f"\nüìÇ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∏–ø—É '{type_str}':")
                for cat in categories[:10]:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 10
                    icon = cat.icon or "‚ùì"
                    print(f"  ‚Ä¢ {icon} {cat.name} (ID: {cat.id}, User: {cat.user_id})")
                if len(categories) > 10:
                    print(f"  ... —Ç–∞ —â–µ {len(categories) - 10}")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 1
            user_categories = session.query(Category).filter(Category.user_id == 1).all()
            print(f"\nüë§ –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ID=1: {len(user_categories)}")
            
            if user_categories:
                user_type_counts = {}
                for cat in user_categories:
                    type_str = str(cat.type)
                    user_type_counts[type_str] = user_type_counts.get(type_str, 0) + 1
                
                print("üìä –†–æ–∑–ø–æ–¥—ñ–ª –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ —Ç–∏–ø–∞–º–∏:")
                for type_str, count in user_type_counts.items():
                    print(f"  ‚Ä¢ {type_str}: {count}")
            
            print(f"\n‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            
        finally:
            session.close()
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_category_types()
