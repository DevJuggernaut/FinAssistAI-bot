#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ–≥–æ ML –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞ —â–æ –ø—Ä–∞—Ü—é—î –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.ml_categorizer import TransactionCategorizer
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_user_categorization():
    """–¢–µ—Å—Ç—É—î –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—é –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–æ–∑—É–º–Ω–æ–≥–æ ML –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞\n")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä
    categorizer = TransactionCategorizer()
    
    # –°–∏–º—É–ª—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏—Ç—Ä–∞—Ç
    user_expense_categories = [
        {'id': 1, 'name': '–ü—Ä–æ–¥—É–∫—Ç–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è', 'icon': 'üõí', 'type': 'expense'},
        {'id': 2, 'name': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —ñ –ø—Ä–æ—ó–∑–¥', 'icon': 'üöó', 'type': 'expense'},
        {'id': 3, 'name': '–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ —Ç–∞ –∫–∞—Ñ–µ', 'icon': 'üçΩÔ∏è', 'type': 'expense'},
        {'id': 4, 'name': '–†–æ–∑–≤–∞–≥–∏ —Ç–∞ –¥–æ–∑–≤—ñ–ª–ª—è', 'icon': 'üéØ', 'type': 'expense'},
        {'id': 5, 'name': '–ú–µ–¥–∏—Ü–∏–Ω–∞', 'icon': 'üíä', 'type': 'expense'},
        {'id': 6, 'name': '–û–¥—è–≥ —Ç–∞ –≤–∑—É—Ç—Ç—è', 'icon': 'üëï', 'type': 'expense'},
        {'id': 7, 'name': '–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–ª–∞—Ç–µ–∂—ñ', 'icon': 'üè†', 'type': 'expense'},
        {'id': 8, 'name': '–û—Å–æ–±–∏—Å—Ç—ñ –≤–∏—Ç—Ä–∞—Ç–∏', 'icon': 'üë§', 'type': 'expense'},
    ]
    
    # –°–∏–º—É–ª—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –¥–æ—Ö–æ–¥—ñ–≤
    user_income_categories = [
        {'id': 101, 'name': '–û—Å–Ω–æ–≤–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞', 'icon': 'üí∞', 'type': 'income'},
        {'id': 102, 'name': '–§—Ä–∏–ª–∞–Ω—Å –ø—Ä–æ–µ–∫—Ç–∏', 'icon': 'üíª', 'type': 'income'},
        {'id': 103, 'name': '–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ—Ö–æ–¥–∏', 'icon': 'üéÅ', 'type': 'income'},
    ]
    
    # –°–∏–º—É–ª—é—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è
    user_transactions = [
        {'description': '–ê–¢–ë –ø—Ä–æ–¥—É–∫—Ç–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å', 'category_id': 1, 'amount': 850, 'type': 'expense'},
        {'description': '–°—ñ–ª—å–ø–æ –æ–≤–æ—á—ñ —Ç–∞ —Ñ—Ä—É–∫—Ç–∏', 'category_id': 1, 'amount': 420, 'type': 'expense'},
        {'description': '–ü—Ä–æ—ó–∑–¥ —É –º–µ—Ç—Ä–æ', 'category_id': 2, 'amount': 50, 'type': 'expense'},
        {'description': 'Uber –¥–æ –¥–æ–º—É', 'category_id': 2, 'amount': 180, 'type': 'expense'},
        {'description': '–û–±—ñ–¥ –≤ McDonald\'s', 'category_id': 3, 'amount': 250, 'type': 'expense'},
        {'description': '–ö–∞–≤–∞ –≤ Starbucks', 'category_id': 3, 'amount': 120, 'type': 'expense'},
        {'description': '–ë—ñ–ª–µ—Ç–∏ –≤ –∫—ñ–Ω–æ', 'category_id': 4, 'amount': 320, 'type': 'expense'},
        {'description': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –ª—ñ–∫–∞—Ä—è', 'category_id': 5, 'amount': 800, 'type': 'expense'},
        {'description': '–õ—ñ–∫–∏ –≤ –∞–ø—Ç–µ—Ü—ñ', 'category_id': 5, 'amount': 340, 'type': 'expense'},
        {'description': '–§—É—Ç–±–æ–ª–∫–∞ –≤ Zara', 'category_id': 6, 'amount': 1200, 'type': 'expense'},
        {'description': '–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –∑–∞ –∫–≤–∞—Ä—Ç–∏—Ä—É', 'category_id': 7, 'amount': 2500, 'type': 'expense'},
        {'description': '–ó–∞—Ä–ø–ª–∞—Ç–∞ –∑–∞ –º—ñ—Å—è—Ü—å', 'category_id': 101, 'amount': 25000, 'type': 'income'},
        {'description': '–û–ø–ª–∞—Ç–∞ –∑–∞ –≤–µ–±-—Å–∞–π—Ç', 'category_id': 102, 'amount': 5000, 'type': 'income'},
    ]
    
    print("üìö –ù–∞–≤—á–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")
    # –ù–∞–≤—á–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä –Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    success = categorizer.train_on_user_transactions(user_transactions, user_expense_categories + user_income_categories)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–≤—á–∞–Ω–Ω—è: {'‚úÖ –£—Å–ø—ñ—à–Ω–æ' if success else '‚ùå –ü–æ–º–∏–ª–∫–∞'}\n")
    
    # –¢–µ—Å—Ç–æ–≤—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—ó
    test_transactions = [
        # –í–∏—Ç—Ä–∞—Ç–∏
        {'description': '–ù–æ–≤—É—Å –º–æ–ª–æ–∫–æ —Ö–ª—ñ–± —Å–∏—Ä', 'amount': 180, 'type': 'expense', 'expected': '–ü—Ä–æ–¥—É–∫—Ç–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è'},
        {'description': '–ú–µ—Ç—Ä–æ –∫–∏—ó–≤—Å—å–∫–∞', 'amount': 50, 'type': 'expense', 'expected': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —ñ –ø—Ä–æ—ó–∑–¥'},
        {'description': '–ü—ñ—Ü–∞ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ñ', 'amount': 350, 'type': 'expense', 'expected': '–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ —Ç–∞ –∫–∞—Ñ–µ'},
        {'description': '–ö–≤–∏—Ç–∫–∏ –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç', 'amount': 800, 'type': 'expense', 'expected': '–†–æ–∑–≤–∞–≥–∏ —Ç–∞ –¥–æ–∑–≤—ñ–ª–ª—è'},
        {'description': '–í—ñ–∑–∏—Ç –¥–æ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∞', 'amount': 1200, 'type': 'expense', 'expected': '–ú–µ–¥–∏—Ü–∏–Ω–∞'},
        {'description': '–î–∂–∏–Ω—Å–∏ –≤ H&M', 'amount': 900, 'type': 'expense', 'expected': '–û–¥—è–≥ —Ç–∞ –≤–∑—É—Ç—Ç—è'},
        {'description': '–ü–ª–∞—Ç—ñ–∂ –∑–∞ –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—é', 'amount': 850, 'type': 'expense', 'expected': '–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–ª–∞—Ç–µ–∂—ñ'},
        {'description': '–°—Ç—Ä–∏–∂–∫–∞ –≤ —Å–∞–ª–æ–Ω—ñ', 'amount': 400, 'type': 'expense', 'expected': '–û—Å–æ–±–∏—Å—Ç—ñ –≤–∏—Ç—Ä–∞—Ç–∏'},
        
        # –î–æ—Ö–æ–¥–∏
        {'description': '–ó–∞—Ä–ø–ª–∞—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç', 'amount': 30000, 'type': 'income', 'expected': '–û—Å–Ω–æ–≤–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞'},
        {'description': '–†–æ–∑—Ä–æ–±–∫–∞ –ª–µ–Ω–¥—ñ–Ω–≥—É –∫–ª—ñ—î–Ω—Ç', 'amount': 8000, 'type': 'income', 'expected': '–§—Ä–∏–ª–∞–Ω—Å –ø—Ä–æ–µ–∫—Ç–∏'},
        {'description': '–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –±–æ—Ä–≥—É', 'amount': 1500, 'type': 'income', 'expected': '–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ—Ö–æ–¥–∏'},
    ]
    
    print("üéØ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—ó:")
    print("=" * 70)
    
    correct_predictions = 0
    total_predictions = 0
    
    for test_trans in test_transactions:
        # –í–∏–±–∏—Ä–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ —Ç–∏–ø—É
        categories = user_expense_categories if test_trans['type'] == 'expense' else user_income_categories
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
        predicted_category = categorizer.get_best_category_for_user(
            description=test_trans['description'],
            amount=test_trans['amount'],
            transaction_type=test_trans['type'],
            user_categories=categories
        )
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å
        is_correct = predicted_category['name'] == test_trans['expected'] if predicted_category else False
        
        if is_correct:
            correct_predictions += 1
        total_predictions += 1
        
        # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result_icon = "‚úÖ" if is_correct else "‚ùå"
        predicted_name = predicted_category['name'] if predicted_category else "–ù–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ"
        
        print(f"{result_icon} '{test_trans['description']}'")
        print(f"   –û—á—ñ–∫—É–≤–∞–Ω–æ: {test_trans['expected']}")
        print(f"   –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–æ: {predicted_name}")
        print(f"   –¢–∏–ø: {test_trans['type']}, –°—É–º–∞: {test_trans['amount']}")
        print()
    
    # –ü—ñ–¥—Å—É–º–æ–∫
    accuracy = (correct_predictions / total_predictions) * 100 if total_predictions > 0 else 0
    print("=" * 70)
    print(f"üìä –ü–Ü–î–°–£–ú–û–ö:")
    print(f"   –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω—å: {correct_predictions}/{total_predictions}")
    print(f"   –¢–æ—á–Ω—ñ—Å—Ç—å: {accuracy:.1f}%")
    
    if accuracy >= 80:
        print("üéâ –í—ñ–¥–º—ñ–Ω–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä –ø—Ä–∞—Ü—é—î –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.")
    elif accuracy >= 60:
        print("üëç –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ü–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.")
    else:
        print("‚ö†Ô∏è –ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—ó.")

def test_user_categories_with_custom_names():
    """–¢–µ—Å—Ç—É—î —Ä–æ–±–æ—Ç—É –∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º–∏ –Ω–∞–∑–≤–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print("\nüîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
    print("=" * 70)
    
    categorizer = TransactionCategorizer()
    
    # –ö–∞—Å—Ç–æ–º–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    custom_categories = [
        {'id': 201, 'name': '–á–∂–∞ –Ω–∞ —Ä–æ–±–æ—Ç—ñ', 'icon': 'üç±', 'type': 'expense'},
        {'id': 202, 'name': '–ü–æ–∫—É–ø–∫–∏ –¥–ª—è —Ö–æ–±—ñ', 'icon': 'üé®', 'type': 'expense'},
        {'id': 203, 'name': '–ü–æ–¥–∞—Ä—É–Ω–∫–∏ –±–ª–∏–∑—å–∫–∏–º', 'icon': 'üéÅ', 'type': 'expense'},
        {'id': 204, 'name': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó —Ç–∞ –Ω–∞–≤—á–∞–Ω–Ω—è', 'icon': 'üìö', 'type': 'expense'},
        {'id': 205, 'name': '–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó —ñ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏', 'icon': 'üìà', 'type': 'income'},
    ]
    
    # –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
    custom_transactions = [
        {'description': '–û–±—ñ–¥ –±—ñ–ª—è –æ—Ñ—ñ—Å—É', 'category_id': 201, 'amount': 200, 'type': 'expense'},
        {'description': '–°–µ–Ω–¥–≤—ñ—á –Ω–∞ —Ä–æ–±–æ—Ç—ñ', 'category_id': 201, 'amount': 80, 'type': 'expense'},
        {'description': '–ü–µ–Ω–∑–ª—ñ –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è', 'category_id': 202, 'amount': 350, 'type': 'expense'},
        {'description': '–ü–æ–ª–æ—Ç–Ω–æ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∏', 'category_id': 202, 'amount': 450, 'type': 'expense'},
        {'description': '–ü–æ–¥–∞—Ä—É–Ω–æ–∫ –º–∞–º—ñ –Ω–∞ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è', 'category_id': 203, 'amount': 800, 'type': 'expense'},
        {'description': '–°—É–≤–µ–Ω—ñ—Ä –¥–ª—è –¥—Ä—É–≥–∞', 'category_id': 203, 'amount': 250, 'type': 'expense'},
        {'description': '–ö—É—Ä—Å –∑ Python', 'category_id': 204, 'amount': 2000, 'type': 'expense'},
        {'description': '–ö–Ω–∏–≥–∞ –ø–æ JavaScript', 'category_id': 204, 'amount': 500, 'type': 'expense'},
        {'description': '–ü—Ä–∏–±—É—Ç–æ–∫ –≤—ñ–¥ Bitcoin', 'category_id': 205, 'amount': 3000, 'type': 'income'},
    ]
    
    # –ù–∞–≤—á–∞—î–º–æ –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö
    success = categorizer.train_on_user_transactions(custom_transactions, custom_categories)
    print(f"–ù–∞–≤—á–∞–Ω–Ω—è –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö: {'‚úÖ –£—Å–ø—ñ—à–Ω–æ' if success else '‚ùå –ü–æ–º–∏–ª–∫–∞'}")
    
    # –¢–µ—Å—Ç—É—î–º–æ –∫–∞—Å—Ç–æ–º–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    custom_tests = [
        {'description': '–ü–µ—Ä–µ–∫—É—Å –≤ –∫–∞—Ñ–µ –±—ñ–ª—è —Ä–æ–±–æ—Ç–∏', 'amount': 150, 'type': 'expense', 'expected': '–á–∂–∞ –Ω–∞ —Ä–æ–±–æ—Ç—ñ'},
        {'description': '–§–∞—Ä–±–∏ –∞–∫–≤–∞—Ä–µ–ª—å–Ω—ñ', 'amount': 280, 'type': 'expense', 'expected': '–ü–æ–∫—É–ø–∫–∏ –¥–ª—è —Ö–æ–±—ñ'},
        {'description': '–ö–≤—ñ—Ç–∏ –Ω–∞ 8 –±–µ—Ä–µ–∑–Ω—è', 'amount': 400, 'type': 'expense', 'expected': '–ü–æ–¥–∞—Ä—É–Ω–∫–∏ –±–ª–∏–∑—å–∫–∏–º'},
        {'description': '–û–Ω–ª–∞–π–Ω –∫—É—Ä—Å –¥–∏–∑–∞–π–Ω—É', 'amount': 1500, 'type': 'expense', 'expected': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó —Ç–∞ –Ω–∞–≤—á–∞–Ω–Ω—è'},
        {'description': '–î–∏–≤—ñ–¥–µ–Ω–¥–∏ –≤—ñ–¥ –∞–∫—Ü—ñ–π', 'amount': 2500, 'type': 'income', 'expected': '–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó —ñ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏'},
    ]
    
    custom_correct = 0
    for test in custom_tests:
        categories = [cat for cat in custom_categories if cat['type'] == test['type']]
        predicted = categorizer.get_best_category_for_user(
            test['description'], test['amount'], test['type'], categories
        )
        
        is_correct = predicted['name'] == test['expected'] if predicted else False
        if is_correct:
            custom_correct += 1
            
        result_icon = "‚úÖ" if is_correct else "‚ùå"
        predicted_name = predicted['name'] if predicted else "–ù–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ"
        
        print(f"{result_icon} '{test['description']}' ‚Üí {predicted_name}")
    
    custom_accuracy = (custom_correct / len(custom_tests)) * 100
    print(f"\nüìä –¢–æ—á–Ω—ñ—Å—Ç—å –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö: {custom_accuracy:.1f}%")
    
    return custom_accuracy

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –†–û–ó–£–ú–ù–û–ì–û ML –ö–ê–¢–ï–ì–û–†–ò–ó–ê–¢–û–†–ê")
    print("=" * 70)
    
    # –û—Å–Ω–æ–≤–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    test_user_categorization()
    
    # –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    custom_accuracy = test_user_categories_with_custom_names()
    
    print("\n" + "=" * 70)
    print("üèÜ –í–ò–°–ù–û–í–û–ö:")
    print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä –Ω–∞–≤—á–∞—î—Ç—å—Å—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
    print("‚úÖ –ü—ñ–¥—Ç—Ä–∏–º—É—î –∫–∞—Å—Ç–æ–º–Ω—ñ –Ω–∞–∑–≤–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
    print("‚úÖ –ü–æ–∫—Ä–∞—â—É—î—Ç—å—Å—è –∑ –∫–æ–∂–Ω–æ—é –Ω–æ–≤–æ—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—î—é")
    print("‚úÖ –ù–µ —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –±–µ–∑ –¥–æ–∑–≤–æ–ª—É")
    
    if custom_accuracy >= 80:
        print("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è: –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è!")
    else:
        print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è: –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à–µ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è.")
