#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥—É CSV –≤–∏–ø–∏—Å–∫–∏ –ú–æ–Ω–æ–±–∞–Ω–∫—É
"""

import sys
import os
import importlib
sys.path.append('/Users/abobina/telegram_bot/FinAssistAI-bot')

# –ü–µ—Ä–µ—ñ–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
if 'services.statement_parser' in sys.modules:
    importlib.reload(sys.modules['services.statement_parser'])

from services.statement_parser import StatementParser
import pandas as pd

def test_monobank_csv(file_path):
    """
    –¢–µ—Å—Ç—É—î –ø–∞—Ä—Å–∏–Ω–≥ CSV —Ñ–∞–π–ª—É –ú–æ–Ω–æ–±–∞–Ω–∫—É
    """
    print(f"üîç –¢–µ—Å—Ç—É—î–º–æ —Ñ–∞–π–ª: {file_path}")
    
    # –°–ø–æ—á–∞—Ç–∫—É –ø–æ–¥–∏–≤–∏–º–æ—Å—å –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª—É
    try:
        df = pd.read_csv(file_path, encoding='utf-8')
        print(f"üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª—É:")
        print(f"   –†—è–¥–∫—ñ–≤: {df.shape[0]}")
        print(f"   –ö–æ–ª–æ–Ω–æ–∫: {df.shape[1]}")
        print(f"   –ù–∞–∑–≤–∏ –∫–æ–ª–æ–Ω–æ–∫: {df.columns.tolist()}")
        print()
        
        # –ü–µ—Ä—à—ñ –∫—ñ–ª—å–∫–∞ —Ä—è–¥–∫—ñ–≤
        print("üìù –ü–µ—Ä—à—ñ 3 —Ä—è–¥–∫–∏:")
        print(df.head(3).to_string())
        print()
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É: {e}")
        return
    
    # –¢–µ—Å—Ç—É—î–º–æ –ø–∞—Ä—Å–µ—Ä
    try:
        parser = StatementParser()
        transactions = parser._parse_monobank_csv(file_path)
        
        print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —É—Å–ø—ñ—à–Ω–∏–π!")
        print(f"üìà –ó–Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: {len(transactions)}")
        
        if transactions:
            print("\nüìã –ü–µ—Ä—à—ñ 5 —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:")
            for i, transaction in enumerate(transactions[:5], 1):
                print(f"  {i}. {transaction['date']} {transaction['time']} - "
                      f"{transaction['type']} {transaction['amount']} UAH - "
                      f"{transaction['description']}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            income_count = sum(1 for t in transactions if t['type'] == 'income')
            expense_count = sum(1 for t in transactions if t['type'] == 'expense')
            
            total_income = sum(t['amount'] for t in transactions if t['type'] == 'income')
            total_expense = sum(t['amount'] for t in transactions if t['type'] == 'expense')
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –î–æ—Ö–æ–¥—ñ–≤: {income_count} ({total_income:.2f} UAH)")
            print(f"   –í–∏—Ç—Ä–∞—Ç: {expense_count} ({total_expense:.2f} UAH)")
            print(f"   –ë–∞–ª–∞–Ω—Å: {total_income - total_expense:.2f} UAH")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    # –¢–µ—Å—Ç—É—î–º–æ –∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–º —Ñ–∞–π–ª–æ–º
    csv_file = "/Users/abobina/Downloads/report_20-06-2025_16-12-17.csv"
    
    if os.path.exists(csv_file):
        test_monobank_csv(csv_file)
    else:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {csv_file}")
