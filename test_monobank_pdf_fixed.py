#!/usr/bin/env python3

"""
Test Monobank PDF import after fixing suggest_category_for_bank_statement method
"""

import sys
import os

# Add the project root to Python path
sys.path.append('/Users/abobina/telegram_bot/FinAssistAI-bot')

from services.statement_parser import StatementParser

def test_monobank_pdf_import():
    """Test Monobank PDF import functionality"""
    
    pdf_file_path = '/Users/abobina/telegram_bot/FinAssistAI-bot/uploads/statements/report_20-06-2025_16-12-03.pdf'
    
    if not os.path.exists(pdf_file_path):
        print(f"‚ùå PDF —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {pdf_file_path}")
        return
    
    print(f"üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—É Monobank PDF: {pdf_file_path}")
    print("-" * 70)
    
    try:
        # –°–ø—Ä–æ–±—É—î–º–æ –ø–∞—Ä—Å–∏—Ç–∏ —Ñ–∞–π–ª
        parser = StatementParser()
        transactions = parser.parse_bank_statement(pdf_file_path, 'monobank')
        
        if not transactions:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó")
            return
        
        print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        print()
        
        # –í–∏–≤–µ–¥–µ–º–æ –ø–µ—Ä—à—ñ 5 —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        for i, trans in enumerate(transactions[:5], 1):
            print(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è {i}:")
            print(f"  –î–∞—Ç–∞: {trans.get('date')}")
            print(f"  –ß–∞—Å: {trans.get('time', 'N/A')}")
            print(f"  –°—É–º–∞: {trans.get('amount')}")
            print(f"  –û–ø–∏—Å: {trans.get('description')}")
            print(f"  –¢–∏–ø: {trans.get('type')}")
            print(f"  –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {trans.get('category')}")
            print()
        
        if len(transactions) > 5:
            print(f"... —ñ —â–µ {len(transactions) - 5} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—é
        categorized = [t for t in transactions if t.get('category') and t.get('category') != '–Ü–Ω—à–µ']
        print(f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–æ–≤–∞–Ω–æ: {len(categorized)} –∑ {len(transactions)} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —Ç–∏–ø–∏
        expenses = [t for t in transactions if t.get('type') == 'expense']
        incomes = [t for t in transactions if t.get('type') == 'income']
        print(f"üí∞ –î–æ—Ö–æ–¥–∏: {len(incomes)}, –í–∏—Ç—Ä–∞—Ç–∏: {len(expenses)}")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_monobank_pdf_import()
