#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
"""

# –°–∏–º—É–ª—è—Ü—ñ—è –≤–µ–ª–∏–∫–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
test_categories = []

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
expense_categories = [
    ("üçî", "–á–∂–∞"),
    ("üöó", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"),
    ("üè†", "–ñ–∏—Ç–ª–æ"),
    ("‚ö°", "–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ"),
    ("üëï", "–û–¥—è–≥"),
    ("üíä", "–ó–¥–æ—Ä–æ–≤'—è"),
    ("üé¨", "–†–æ–∑–≤–∞–≥–∏"),
    ("üìö", "–û—Å–≤—ñ—Ç–∞"),
    ("üéÅ", "–ü–æ–¥–∞—Ä—É–Ω–∫–∏"),
    ("üõí", "–ü–æ–∫—É–ø–∫–∏"),
    ("‚òï", "–ö–∞—Ñ–µ"),
    ("üí∏", "–Ü–Ω—à–µ"),
    ("üöñ", "–¢–∞–∫—Å—ñ"),
    ("üí≥", "–ë–∞–Ω–∫"),
    ("üì±", "–ó–≤'—è–∑–æ–∫"),
    ("üíª", "–¢–µ—Ö–Ω—ñ–∫–∞"),
    ("üèÉ‚Äç‚ôÇÔ∏è", "–°–ø–æ—Ä—Ç"),
    ("‚úÇÔ∏è", "–ö—Ä–∞—Å–∞"),
    ("üêï", "–¢–≤–∞—Ä–∏–Ω–∏"),
    ("üö≠", "–®–∫—ñ–¥–ª–∏–≤—ñ –∑–≤–∏—á–∫–∏")
]

income_categories = [
    ("üí∞", "–ó–∞—Ä–ø–ª–∞—Ç–∞"),
    ("üíº", "–ë—ñ–∑–Ω–µ—Å"),
    ("üéØ", "–ë–æ–Ω—É—Å–∏"),
    ("üìà", "–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó"),
    ("üéÅ", "–ü–æ–¥–∞—Ä—É–Ω–∫–∏"),
    ("üí∏", "–Ü–Ω—à–µ")
]

print("üß™ –¢–µ—Å—Ç –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤")
print("=" * 50)

# –°–∏–º—É–ª—é—î–º–æ –ª–æ–≥—ñ–∫—É –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
def test_pagination(categories, per_page=8):
    """–¢–µ—Å—Ç—É—î –ª–æ–≥—ñ–∫—É –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó"""
    total_categories = len(categories)
    total_pages = max(1, (total_categories + per_page - 1) // per_page)
    
    print(f"üìä –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å—å–æ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {total_categories}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É: {per_page}")
    print(f"   –í—Å—å–æ–≥–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫: {total_pages}")
    print()
    
    for page in range(1, total_pages + 1):
        start_idx = (page - 1) * per_page
        end_idx = start_idx + per_page
        page_categories = categories[start_idx:end_idx]
        
        print(f"üìÑ –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {total_pages}:")
        print(f"   –Ü–Ω–¥–µ–∫—Å–∏: {start_idx}-{min(end_idx - 1, total_categories - 1)}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: {len(page_categories)}")
        
        # –ì—Ä—É–ø—É—î–º–æ –ø–æ 2 –≤ —Ä—è–¥
        for i in range(0, len(page_categories), 2):
            row_categories = page_categories[i:min(i + 2, len(page_categories))]
            row_text = " | ".join([f"{icon} {name}" for icon, name in row_categories])
            print(f"     {row_text}")
        
        print()

print("üß™ –¢–µ—Å—Ç –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤")
print("=" * 50)

# –°–∏–º—É–ª—é—î–º–æ –ª–æ–≥—ñ–∫—É –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–æ–º –Ω–∞ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –¥–æ—Ö–æ–¥–∏
def test_pagination_with_separation(expense_categories, income_categories, per_page=8):
    """–¢–µ—Å—Ç—É—î –ª–æ–≥—ñ–∫—É –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∑ —Ä–æ–∑–ø–æ–¥—ñ–ª–æ–º –Ω–∞ –≤–∏—Ç—Ä–∞—Ç–∏ —Ç–∞ –¥–æ—Ö–æ–¥–∏"""
    # –û–±'—î–¥–Ω—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
    all_categories = expense_categories + income_categories
    total_categories = len(all_categories)
    total_pages = max(1, (total_categories + per_page - 1) // per_page)
    
    print(f"üìä –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å—å–æ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {total_categories}")
    print(f"   üí∏ –í–∏—Ç—Ä–∞—Ç–∏: {len(expense_categories)}")
    print(f"   üí∞ –î–æ—Ö–æ–¥–∏: {len(income_categories)}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É: {per_page}")
    print(f"   –í—Å—å–æ–≥–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫: {total_pages}")
    print()
    
    for page in range(1, total_pages + 1):
        start_idx = (page - 1) * per_page
        end_idx = start_idx + per_page
        page_categories = all_categories[start_idx:end_idx]
        
        # –†–æ–∑–¥—ñ–ª—è—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        page_expenses = [(icon, name) for icon, name in page_categories if name in [cat[1] for cat in expense_categories]]
        page_incomes = [(icon, name) for icon, name in page_categories if name in [cat[1] for cat in income_categories]]
        
        print(f"üìÑ –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {total_pages}:")
        print(f"   –Ü–Ω–¥–µ–∫—Å–∏: {start_idx}-{min(end_idx - 1, total_categories - 1)}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: {len(page_categories)}")
        print(f"   üí∏ –í–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: {len(page_expenses)}")
        print(f"   üí∞ –î–æ—Ö–æ–¥–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: {len(page_incomes)}")
        print()
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –≤–∏—Ç—Ä–∞—Ç–∏
        if page_expenses:
            print(f"   üí∏ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∏—Ç—Ä–∞—Ç:")
            for i in range(0, len(page_expenses), 2):
                row_categories = page_expenses[i:min(i + 2, len(page_expenses))]
                row_text = " | ".join([f"{icon} {name}" for icon, name in row_categories])
                print(f"     {row_text}")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Ö–æ–¥–∏
        if page_incomes:
            print(f"   üí∞ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–æ—Ö–æ–¥—ñ–≤:")
            for i in range(0, len(page_incomes), 2):
                row_categories = page_incomes[i:min(i + 2, len(page_incomes))]
                row_text = " | ".join([f"{icon} {name}" for icon, name in row_categories])
                print(f"     {row_text}")
        
        print()

# –¢–µ—Å—Ç—É—î–º–æ –∑ —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
print("üß™ –¢–µ—Å—Ç –∑ —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏:")
test_pagination_with_separation(expense_categories, income_categories)

print("\n" + "=" * 50)
print("‚úÖ –õ–æ–≥—ñ–∫–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
print()
print("üîß –û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:")
print("   ‚úì –†–æ–∑–±–∏—Ç—Ç—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö")
print("   ‚úì –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–æ–∫")
print("   ‚úì –ü—Ä–∞–≤–∏–ª—å–Ω—ñ —ñ–Ω–¥–µ–∫—Å–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏")
print("   ‚úì –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è –ø–æ 2 –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤ —Ä—è–¥")
print("   ‚úì –¢—ñ–ª—å–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (–±–µ–∑ –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏)")
print()
print("üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –≥–æ—Ç–æ–≤–∞ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!")
