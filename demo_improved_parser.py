#!/usr/bin/env python3
"""
–î–µ–º–æ –ø–æ–∫—Ä–∞—â–µ–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ —á–µ–∫—ñ–≤ –¢–∞–≤—Ä—ñ—è –í
"""

import sys
import os
sys.path.append('/Users/abobina/telegram_bot/FinAssistAI-bot')

from services.tavria_receipt_parser import TavriaReceiptParser

def test_specific_receipt():
    """–¢–µ—Å—Ç—É—î –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —á–µ–∫ –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º"""
    
    parser = TavriaReceiptParser()
    receipt_path = '/Users/abobina/telegram_bot/FinAssistAI-bot/uploads/receipts/photo_2025-06-24 21.09.07.jpeg'
    
    print("="*60)
    print("–¢–ï–°–¢ –ü–û–ö–†–ê–©–ï–ù–û–ì–û –ü–ê–†–°–ï–†–ê –ß–ï–ö–Ü–í –¢–ê–í–†–Ü–Ø –í")
    print("="*60)
    
    result = parser.parse_receipt(receipt_path)
    
    if result:
        print(f"\n‚úÖ –ß–ï–ö –£–°–ü–Ü–®–ù–û –†–û–ó–ü–Ü–ó–ù–ê–ù–û!")
        print(f"–ú–∞–≥–∞–∑–∏–Ω: {result['store_name']}")
        print(f"–î–∞—Ç–∞: {result.get('date', '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ')}")
        print(f"–ù–æ–º–µ—Ä —á–µ–∫–∞: {result.get('receipt_number', '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ')}")
        print(f"–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {result['total_amount']:.2f} –≥—Ä–Ω")
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä—ñ–≤: {len(result['items'])}")
        
        print(f"\nüì¶ –¢–û–í–ê–†–ò:")
        for i, item in enumerate(result['items'], 1):
            print(f"  {i}. {item['name']}: {item['price']:.2f} –≥—Ä–Ω ({item['category']})")
        
        print(f"\nüìä –ü–û –ö–ê–¢–ï–ì–û–†–Ü–Ø–•:")
        for category, info in result['categorized_items'].items():
            print(f"  {category}: {info['item_count']} —Ç–æ–≤–∞—Ä—ñ–≤, {info['total_amount']:.2f} –≥—Ä–Ω")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —á–∞—Å—Ç–∏–Ω—É —Å–∏—Ä–æ–≥–æ —Ç–µ–∫—Å—Ç—É
        print(f"\nüìÑ –§–†–ê–ì–ú–ï–ù–¢ –†–û–ó–ü–Ü–ó–ù–ê–ù–û–ì–û –¢–ï–ö–°–¢–£:")
        print(result['raw_text'][:300] + "...")
        
    else:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ —á–µ–∫")

if __name__ == "__main__":
    test_specific_receipt()
