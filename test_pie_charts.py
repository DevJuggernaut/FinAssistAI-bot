#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ –∫—Ä—É–≥–æ–≤–∏—Ö –¥—ñ–∞–≥—Ä–∞–º –¥–ª—è –æ–≥–ª—è–¥—É —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.report_generator import FinancialReport
from database.db_operations import get_or_create_user
from database.session import Session
from database.models import Transaction, Category, TransactionType
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_pie_charts():
    """–¢–µ—Å—Ç—É—î–º–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∫—Ä—É–≥–æ–≤–∏—Ö –¥—ñ–∞–≥—Ä–∞–º"""
    
    # –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á (–≤–∞—à telegram_id)
    test_telegram_id = 580683833
    
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = get_or_create_user(test_telegram_id)
        logger.info(f"–ó–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.id}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—ñ—Ç
        financial_report = FinancialReport(user.id)
        
        # –¢–µ—Å—Ç—É—î–º–æ –∫—Ä—É–≥–æ–≤—É –¥—ñ–∞–≥—Ä–∞–º—É –≤–∏—Ç—Ä–∞—Ç
        logger.info("–ì–µ–Ω–µ—Ä—É—î–º–æ –∫—Ä—É–≥–æ–≤—É –¥—ñ–∞–≥—Ä–∞–º—É –≤–∏—Ç—Ä–∞—Ç...")
        expenses_chart, error = financial_report.generate_expense_pie_chart()
        
        if error:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –¥—ñ–∞–≥—Ä–∞–º–∏ –≤–∏—Ç—Ä–∞—Ç: {error}")
        else:
            logger.info("‚úÖ –î—ñ–∞–≥—Ä–∞–º–∞ –≤–∏—Ç—Ä–∞—Ç –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
            
        # –¢–µ—Å—Ç—É—î–º–æ –∫—Ä—É–≥–æ–≤—É –¥—ñ–∞–≥—Ä–∞–º—É –¥–æ—Ö–æ–¥—ñ–≤
        logger.info("–ì–µ–Ω–µ—Ä—É—î–º–æ –∫—Ä—É–≥–æ–≤—É –¥—ñ–∞–≥—Ä–∞–º—É –¥–æ—Ö–æ–¥—ñ–≤...")
        income_chart, error = financial_report.generate_income_pie_chart()
        
        if error:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –¥—ñ–∞–≥—Ä–∞–º–∏ –¥–æ—Ö–æ–¥—ñ–≤: {error}")
        else:
            logger.info("‚úÖ –î—ñ–∞–≥—Ä–∞–º–∞ –¥–æ—Ö–æ–¥—ñ–≤ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
            
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
        session = Session()
        expense_count = session.query(Transaction).filter(
            Transaction.user_id == user.id,
            Transaction.type == TransactionType.EXPENSE
        ).count()
        
        income_count = session.query(Transaction).filter(
            Transaction.user_id == user.id,
            Transaction.type == TransactionType.INCOME
        ).count()
        
        session.close()
        
        logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:")
        logger.info(f"   –í–∏—Ç—Ä–∞—Ç–∏: {expense_count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        logger.info(f"   –î–æ—Ö–æ–¥–∏: {income_count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        
        if expense_count == 0:
            logger.warning("‚ö†Ô∏è –ù–µ–º–∞—î –≤–∏—Ç—Ä–∞—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥—ñ–∞–≥—Ä–∞–º–∏")
        if income_count == 0:
            logger.warning("‚ö†Ô∏è –ù–µ–º–∞—î –¥–æ—Ö–æ–¥—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥—ñ–∞–≥—Ä–∞–º–∏")
            
        logger.info("üéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_pie_charts()
