#!/usr/bin/env python3
"""
–ê–Ω–∞–ª—ñ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ XLS —Ñ–∞–π–ª—É Monobank
"""

import pandas as pd
import os
import sys

def analyze_monobank_xls(file_path):
    """
    –ê–Ω–∞–ª—ñ–∑—É—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É XLS —Ñ–∞–π–ª—É Monobank
    """
    print(f"üìä –ê–Ω–∞–ª—ñ–∑ —Ñ–∞–π–ª—É: {file_path}")
    print("=" * 50)
    
    try:
        # –ß–∏—Ç–∞—î–º–æ –≤—Å—ñ –∞—Ä–∫—É—à—ñ
        excel_file = pd.ExcelFile(file_path)
        print(f"üìÑ –ó–Ω–∞–π–¥–µ–Ω—ñ –∞—Ä–∫—É—à—ñ: {excel_file.sheet_names}")
        
        for sheet_name in excel_file.sheet_names:
            print(f"\nüîç –ê–Ω–∞–ª—ñ–∑ –∞—Ä–∫—É—à–∞: '{sheet_name}'")
            print("-" * 30)
            
            # –ß–∏—Ç–∞—î–º–æ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
            df_raw = pd.read_excel(file_path, sheet_name=sheet_name, header=None)
            print(f"üìê –†–æ–∑–º—ñ—Ä: {df_raw.shape[0]} —Ä—è–¥–∫—ñ–≤ x {df_raw.shape[1]} –∫–æ–ª–æ–Ω–æ–∫")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 20 —Ä—è–¥–∫—ñ–≤
            print(f"\nüìã –ü–µ—Ä—à—ñ 20 —Ä—è–¥–∫—ñ–≤:")
            for i in range(min(20, len(df_raw))):
                row_data = []
                for j in range(len(df_raw.columns)):
                    val = df_raw.iloc[i, j]
                    if pd.isna(val):
                        row_data.append("NaN")
                    else:
                        row_data.append(str(val)[:30])  # –û–±—Ä—ñ–∑–∞—î–º–æ –¥–æ–≤–≥—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
                
                print(f"–†—è–¥–æ–∫ {i:2d}: {' | '.join(row_data)}")
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ —Ä—è–¥–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
                row_text = ' '.join([str(val).lower() if not pd.isna(val) else '' for val in df_raw.iloc[i].values])
                keywords = ['–¥–∞—Ç–∞', '—á–∞—Å', '–æ–ø–µ—Ä–∞—Ü—ñ—ó', '—Å—É–º–∞', '–¥–µ—Ç–∞–ª—ñ', '–º—Å—Å', '–±–∞–ª–∞–Ω—Å']
                keyword_count = sum(1 for keyword in keywords if keyword in row_text)
                
                if keyword_count >= 2:
                    print(f"   ‚≠ê –ú–û–ñ–õ–ò–í–ò–ô –ó–ê–ì–û–õ–û–í–û–ö! –ó–Ω–∞–π–¥–µ–Ω–æ {keyword_count} –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤")
                    print(f"      –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞: {[kw for kw in keywords if kw in row_text]}")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–ª–æ–Ω–∫–∞—Ö
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–ª–æ–Ω–∫–∞—Ö:")
            for j in range(len(df_raw.columns)):
                col_data = df_raw.iloc[:, j]
                non_na_count = col_data.notna().sum()
                print(f"  –ö–æ–ª–æ–Ω–∫–∞ {j}: {non_na_count}/{len(col_data)} –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å")
                
                # –ü–æ–∫–∞–∑—É—î–º–æ –∫—ñ–ª—å–∫–∞ –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ –∑–Ω–∞—á–µ–Ω—å
                examples = col_data.dropna().head(3).tolist()
                if examples:
                    print(f"    –ü—Ä–∏–∫–ª–∞–¥–∏: {examples}")
                    
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª—ñ–∑—ñ: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    file_path = "uploads/statements/report_20-06-2025_16-12-27.xls"
    
    if os.path.exists(file_path):
        analyze_monobank_xls(file_path)
    else:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
        print("–î–æ—Å—Ç—É–ø–Ω—ñ —Ñ–∞–π–ª–∏:")
        if os.path.exists("uploads/statements/"):
            for f in os.listdir("uploads/statements/"):
                print(f"  - {f}")
