#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó –∫—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏
"""

import sys
import asyncio
from unittest.mock import MagicMock, AsyncMock

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/abobina/telegram_bot/FinAssistAI-bot')

async def test_improved_pie_chart():
    """–¢–µ—Å—Ç—É—î –ø–æ–∫—Ä–∞—â–µ–Ω—É –∫—Ä—É–≥–æ–≤—É –¥—ñ–∞–≥—Ä–∞–º—É"""
    print("üß™ –¢–ï–°–¢: –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –∫—Ä—É–≥–æ–≤–∞ –¥—ñ–∞–≥—Ä–∞–º–∞")
    print("=" * 50)
    
    try:
        from handlers.analytics_handler import show_analytics_charts, show_chart_data_type_selection
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–∫-–æ–±'—î–∫—Ç–∏
        query = MagicMock()
        query.edit_message_text = AsyncMock()
        query.from_user.id = 123456
        
        context = MagicMock()
        context.user_data = {}
        
        # –¢–µ—Å—Ç—É—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
        print("\nüìä –¢–µ—Å—Ç 1: –ú–µ–Ω—é –≥—Ä–∞—Ñ—ñ–∫—ñ–≤")
        print("-" * 30)
        
        await show_analytics_charts(query, context)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –±—É–ª–æ –≤–∏–∫–ª–∏–∫–∞–Ω–æ edit_message_text
        assert query.edit_message_text.called, "–ú–µ—Ç–æ–¥ edit_message_text –Ω–µ –±—É–ª–æ –≤–∏–∫–ª–∏–∫–∞–Ω–æ"
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –≤–∏–∫–ª–∏–∫—É
        call_args = query.edit_message_text.call_args
        text = call_args[1]['text']  # kwargs['text']
        
        print("‚úÖ –ú–µ–Ω—é –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—å")
        print(f"üìù –§—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç—É: {text[:150]}...")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
        assert "üç© **–ö—Ä—É–≥–æ–≤–∞ –¥—ñ–∞–≥—Ä–∞–º–∞**" in text, "–ö—Ä—É–≥–æ–≤–∞ –¥—ñ–∞–≥—Ä–∞–º–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"
        assert "üìä **–°—Ç–æ–≤–ø—á–∞—Å—Ç–∏–π –≥—Ä–∞—Ñ—ñ–∫**" in text, "–°—Ç–æ–≤–ø—á–∞—Å—Ç–∏–π –≥—Ä–∞—Ñ—ñ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"
        assert "–ù–∞–æ—á–Ω–æ –ø–æ–∫–∞–∑—É—î –¥–µ –Ω–∞–π–±—ñ–ª—å—à–µ —Ç—Ä–∞—Ç" in text, "–û–ø–∏—Å –∫—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"
        
        print("‚úÖ –í—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–µ–Ω—é –ø—Ä–∏—Å—É—Ç–Ω—ñ!")
        
        # –¢–µ—Å—Ç—É—î–º–æ –º–µ–Ω—é –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –¥–∞–Ω–∏—Ö –¥–ª—è –∫—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏
        print("\nüç© –¢–µ—Å—Ç 2: –ú–µ–Ω—é —Ç–∏–ø—É –¥–∞–Ω–∏—Ö –¥–ª—è –∫—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏")
        print("-" * 50)
        
        query.edit_message_text.reset_mock()
        
        await show_chart_data_type_selection(query, context, "pie")
        
        assert query.edit_message_text.called, "–ú–µ—Ç–æ–¥ edit_message_text –Ω–µ –±—É–ª–æ –≤–∏–∫–ª–∏–∫–∞–Ω–æ"
        
        call_args = query.edit_message_text.call_args
        text = call_args[1]['text']
        
        print("‚úÖ –ú–µ–Ω—é –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –¥–∞–Ω–∏—Ö –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—å")
        print(f"üìù –§—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç—É: {text[:150]}...")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ–∫—Ä–∞—â–µ–Ω—ñ –æ–ø–∏—Å–∏
        assert "üç© –ö—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏" in text, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"
        assert "–¥–µ –Ω–∞–π–±—ñ–ª—å—à–µ —Ç—Ä–∞—Ç?" in text, "–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –æ–ø–∏—Å –≤–∏—Ç—Ä–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"
        assert "–∑–≤—ñ–¥–∫–∏ –Ω–∞–¥—Ö–æ–¥—è—Ç—å –∫–æ—à—Ç–∏?" in text, "–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –æ–ø–∏—Å –¥–æ—Ö–æ–¥—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"
        
        print("‚úÖ –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –æ–ø–∏—Å–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ!")
        
        print("\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
        print("=" * 30)
        print("‚úÖ –ú–µ–Ω—é –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ –æ–Ω–æ–≤–ª–µ–Ω–æ")
        print("‚úÖ –ö—Ä—É–≥–æ–≤–∞ –¥—ñ–∞–≥—Ä–∞–º–∞ —Ç–µ–ø–µ—Ä –º–∞—î –µ–º–æ–¥–∑—ñ üç©")
        print("‚úÖ –î–æ–¥–∞–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ñ –æ–ø–∏—Å–∏ —Ñ—É–Ω–∫—Ü—ñ–π")
        print("‚úÖ –ü–æ–∫—Ä–∞—â–µ–Ω–æ –∑—Ä–æ–∑—É–º—ñ–ª—ñ—Å—Ç—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        print("‚úÖ –ó–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤—Å—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å")
        
        print("\nüåü –û–°–ù–û–í–ù–Ü –ü–û–ö–†–ê–©–ï–ù–ù–Ø:")
        print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")
        print("üé® –°—É—á–∞—Å–Ω–∏–π –¥–∏–∑–∞–π–Ω –¥—ñ–∞–≥—Ä–∞–º–∏:")
        print("   ‚Ä¢ –ü–æ–Ω—á–∏–∫–æ–≤–∞ —Ñ–æ—Ä–º–∞ –∑–∞–º—ñ—Å—Ç—å –ø–æ–≤–Ω–æ–≥–æ –∫–æ–ª–∞")
        print("   ‚Ä¢ –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞")
        print("   ‚Ä¢ –õ–µ–≥–µ–Ω–¥–∞ –ø–æ–∑–∞ –¥—ñ–∞–≥—Ä–∞–º–æ—é")
        print("   ‚Ä¢ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç —ñ–∑ –∑–∞–≥–∞–ª—å–Ω–æ—é —Å—É–º–æ—é")
        print()
        print("üìù –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –æ–ø–∏—Å–∏:")
        print("   ‚Ä¢ –ó—Ä–æ–∑—É–º—ñ–ª—ñ—à—ñ –ø–æ—è—Å–Ω–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π")
        print("   ‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É")
        print("   ‚Ä¢ –ï–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è")
        print()
        print("üìä –ü–æ–∫—Ä–∞—â–µ–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ñ—Å—Ç—å:")
        print("   ‚Ä¢ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—É–º —Ç–∞ –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤")
        print("   ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
        print("   ‚Ä¢ –ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Ä–∞–¥–∏ —â–æ–¥–æ –∞–Ω–∞–ª—ñ–∑—É")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ —Ç–µ—Å—Ç—ñ: {e}")
        import traceback
        traceback.print_exc()
        return False

async def demo_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–∏—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π"""
    print("\n" + "=" * 60)
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –ù–û–í–ò–• –ú–û–ñ–õ–ò–í–û–°–¢–ï–ô")
    print("=" * 60)
    
    print("\nüéØ 1. –°–£–ß–ê–°–ù–ò–ô –î–ò–ó–ê–ô–ù –ö–†–£–ì–û–í–û–á –î–Ü–ê–ì–†–ê–ú–ò")
    print("‚îÄ" * 40)
    print("‚Ä¢ üç© –ü–æ–Ω—á–∏–∫–æ–≤–∞ —Ñ–æ—Ä–º–∞ –∑–∞–º—ñ—Å—Ç—å –∑–≤–∏—á–∞–π–Ω–æ—ó –∫—Ä—É–≥–æ–≤–æ—ó")
    print("‚Ä¢ üé® –°—É—á–∞—Å–Ω–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞ –∑ 8 –∫–æ–ª—å–æ—Ä–∞–º–∏")
    print("‚Ä¢ üìä –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç —ñ–∑ –∑–∞–≥–∞–ª—å–Ω–æ—é —Å—É–º–æ—é")
    print("‚Ä¢ üìã –õ–µ–≥–µ–Ω–¥–∞ –ø–æ–∑–∞ –¥—ñ–∞–≥—Ä–∞–º–æ—é –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ")
    print("‚Ä¢ ‚ú® –ë—ñ–ª—ñ –≥—Ä–∞–Ω–∏—Ü—ñ –º—ñ–∂ —Å–µ–∫—Ç–æ—Ä–∞–º–∏")
    
    print("\nüí° 2. –ü–û–ö–†–ê–©–ï–ù–ê –ó–†–û–ó–£–ú–Ü–õ–Ü–°–¢–¨")
    print("‚îÄ" * 35)
    print("‚Ä¢ üç© –ó–º—ñ–Ω–µ–Ω–æ –µ–º–æ–¥–∑—ñ –∑ ü•ß –Ω–∞ üç© (–±—ñ–ª—å—à —Å—É—á–∞—Å–Ω–æ)")
    print("‚Ä¢ üìù –î–µ—Ç–∞–ª—å–Ω—ñ –æ–ø–∏—Å–∏ –∫–æ–∂–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó")
    print("‚Ä¢ üéØ –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
    print("‚Ä¢ üí≠ –ü–æ—è—Å–Ω–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—ñ –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É –¥—ñ–∞–≥—Ä–∞–º–∏")
    
    print("\nüìà 3. –ü–û–ö–†–ê–©–ï–ù–ê –Ü–ù–§–û–†–ú–ê–¢–ò–í–ù–Ü–°–¢–¨")
    print("‚îÄ" * 37)
    print("‚Ä¢ üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤ —Ü–µ–Ω—Ç—Ä—ñ –¥—ñ–∞–≥—Ä–∞–º–∏")
    print("‚Ä¢ üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")
    print("‚Ä¢ üîç –°—É–º–∏ —Ç–∞ –≤—ñ–¥—Å–æ—Ç–∫–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó")
    print("‚Ä¢ üí° –ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Ä–∞–¥–∏ —â–æ–¥–æ –∞–Ω–∞–ª—ñ–∑—É –¥–∞–Ω–∏—Ö")
    
    print("\nüîß 4. –¢–ï–•–ù–Ü–ß–ù–Ü –ü–û–ö–†–ê–©–ï–ù–ù–Ø")
    print("‚îÄ" * 30)
    print("‚Ä¢ üìê –ü–æ–∫—Ä–∞—â–µ–Ω—ñ –ø—Ä–æ–ø–æ—Ä—Ü—ñ—ó (12x10 –∑–∞–º—ñ—Å—Ç—å 10x8)")
    print("‚Ä¢ üé® –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è matplotlib.patches –¥–ª—è –ª–µ–≥–µ–Ω–¥–∏")
    print("‚Ä¢ üì± –ö—Ä–∞—â—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤")
    print("‚Ä¢ üíæ –í–∏—â–∞ —è–∫—ñ—Å—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (DPI 300)")
    
    print("\n" + "=" * 60)
    print("üéâ –ì–û–¢–û–í–û! –ö—Ä—É–≥–æ–≤–∞ –¥—ñ–∞–≥—Ä–∞–º–∞ —Å—Ç–∞–ª–∞ —Å—É—á–∞—Å–Ω–æ—é —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª–æ—é!")
    print("=" * 60)

if __name__ == "__main__":
    async def main():
        success = await test_improved_pie_chart()
        if success:
            await demo_features()
        else:
            print("‚ùå –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –ø—Ä–æ–π—à–ª–æ")
    
    asyncio.run(main())
